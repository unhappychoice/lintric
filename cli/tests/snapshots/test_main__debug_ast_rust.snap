---
source: cli/tests/test_main.rs
expression: out
---
(source_file
  (struct_item
    name: (type_identifier "Point")
    body: (field_declaration_list
      (field_declaration
        name: (field_identifier "x")
        type: (primitive_type "i32")
      )
      (field_declaration
        name: (field_identifier "y")
        type: (primitive_type "i32")
      )
    )
  )
  (function_item
    name: (identifier "add")
    parameters: (parameters
      (parameter
        pattern: (identifier "a")
        type: (primitive_type "i32")
      )
      (parameter
        pattern: (identifier "b")
        type: (primitive_type "i32")
      )
    )
    return_type: (primitive_type "i32")
    body: (block
      (let_declaration
        pattern: (identifier "result")
        value: (binary_expression
          left: (identifier "a")
          right: (identifier "b")
        )
      )
      (identifier "result")
    )
  )
  (function_item
    name: (identifier "main")
    parameters: (parameters)
    body: (block
      (let_declaration
        pattern: (identifier "p1")
        value: (struct_expression
          name: (type_identifier "Point")
          body: (field_initializer_list
            (field_initializer
              field: (field_identifier "x")
              value: (integer_literal "1")
            )
            (field_initializer
              field: (field_identifier "y")
              value: (integer_literal "2")
            )
          )
        )
      )
      (let_declaration
        pattern: (identifier "p2")
        value: (struct_expression
          name: (type_identifier "Point")
          body: (field_initializer_list
            (field_initializer
              field: (field_identifier "x")
              value: (integer_literal "3")
            )
            (field_initializer
              field: (field_identifier "y")
              value: (integer_literal "4")
            )
          )
        )
      )
      (let_declaration
        pattern: (identifier "p3")
        value: (struct_expression
          name: (type_identifier "Point")
          body: (field_initializer_list
            (field_initializer
              field: (field_identifier "x")
              value: (call_expression
                function: (identifier "add")
                arguments: (arguments
                  (field_expression
                    value: (identifier "p1")
                    field: (field_identifier "x")
                  )
                  (field_expression
                    value: (identifier "p2")
                    field: (field_identifier "x")
                  )
                )
              )
            )
            (field_initializer
              field: (field_identifier "y")
              value: (call_expression
                function: (identifier "add")
                arguments: (arguments
                  (field_expression
                    value: (identifier "p1")
                    field: (field_identifier "y")
                  )
                  (field_expression
                    value: (identifier "p2")
                    field: (field_identifier "y")
                  )
                )
              )
            )
          )
        )
      )
      (let_declaration
        pattern: (identifier "p4")
        value: (block
          (let_declaration
            pattern: (identifier "p5")
            value: (struct_expression
              name: (type_identifier "Point")
              body: (field_initializer_list
                (field_initializer
                  field: (field_identifier "x")
                  value: (integer_literal "5")
                )
                (field_initializer
                  field: (field_identifier "y")
                  value: (integer_literal "6")
                )
              )
            )
          )
          (let_declaration
            pattern: (identifier "p6")
            value: (identifier "p5")
          )
          (identifier "p6")
        )
      )
      (let_declaration
        pattern: (identifier "x")
        value: (integer_literal "1")
      )
      (let_declaration
        pattern: (identifier "y")
        value: (binary_expression
          left: (identifier "x")
          right: (integer_literal "1")
        )
      )
      (let_declaration
        pattern: (identifier "z")
        value: (binary_expression
          left: (identifier "y")
          right: (identifier "x")
        )
      )
      (expression_statement
        (macro_invocation
          macro: (identifier "println")
          (token_tree
            (string_literal ""{:?}""
              (string_content)
            )
            (identifier "p3")
          )
        )
      )
      (expression_statement
        (macro_invocation
          macro: (identifier "println")
          (token_tree
            (string_literal ""{:?}""
              (string_content)
            )
            (identifier "p4")
          )
        )
      )
    )
  )
)
