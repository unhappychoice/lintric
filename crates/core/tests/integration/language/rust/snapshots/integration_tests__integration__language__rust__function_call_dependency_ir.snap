---
source: crates/core/tests/integration/language/rust/mod.rs
expression: ir_snapshot_content
---
Source Code:
fn add(a: i32, b: i32) -> i32 {
    a + b
}
fn main() {
    let x = add(1, 2);
}

AST:
(source_file
  (function_item
    name: (identifier "add")
    parameters: (parameters
      (parameter
        pattern: (identifier "a")
        type: (primitive_type "i32")
      )
      (parameter
        pattern: (identifier "b")
        type: (primitive_type "i32")
      )
    )
    return_type: (primitive_type "i32")
    body: (block
      (binary_expression
        left: (identifier "a")
        right: (identifier "b")
      )
    )
  )
  (function_item
    name: (identifier "main")
    parameters: (parameters)
    body: (block
      (let_declaration
        pattern: (identifier "x")
        value: (call_expression
          function: (identifier "add")
          arguments: (arguments
            (integer_literal "1")
            (integer_literal "2")
          )
        )
      )
    )
  )
)

IR:
IntermediateRepresentation {
    file_path: "tests/integration/language/rust/fixtures/function_call_dependency.rs",
    definitions: [
        Definition { position: { 1:4 to 1:7 }, name: "add", definition_type: FunctionDefinition, scope_id: Some(1), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 1:8 to 1:9 }, name: "a", definition_type: VariableDefinition, scope_id: Some(1), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 1:16 to 1:17 }, name: "b", definition_type: VariableDefinition, scope_id: Some(1), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 4:4 to 4:8 }, name: "main", definition_type: FunctionDefinition, scope_id: Some(3), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 5:9 to 5:10 }, name: "x", definition_type: VariableDefinition, scope_id: Some(4), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
    ],
    dependencies: [
        Dependency { source_line: 2, target_line: 1, symbol: "a", dependency_type: VariableUse, context: Some("Identifier:2:5") },
        Dependency { source_line: 2, target_line: 1, symbol: "b", dependency_type: VariableUse, context: Some("Identifier:2:9") },
        Dependency { source_line: 5, target_line: 1, symbol: "add", dependency_type: FunctionCall, context: Some("CallExpression:5:13") },
    ],
    usage: [
        Usage { position: { 2:5 to 2:6 }, name: "a", kind: Identifier, context: None },
        Usage { position: { 2:9 to 2:10 }, name: "b", kind: Identifier, context: None },
        Usage { position: { 5:13 to 5:22 }, name: "add", kind: CallExpression, context: Some("call_expression") },
    ],
    analysis_metadata: AnalysisMetadata {
        language: "Rust",
        total_lines: 6,
        analysis_timestamp: "now",
        lintric_version: "0.1.0",
    },
}
