---
source: crates/core/tests/integration/language/rust/mod.rs
expression: ir_snapshot_content
---
Source Code:
let a = 1;
let b = a + 1;

AST:
(source_file
  (let_declaration
    pattern: (identifier "a")
    value: (integer_literal "1")
  )
  (let_declaration
    pattern: (identifier "b")
    value: (binary_expression
      left: (identifier "a")
      right: (integer_literal "1")
    )
  )
)

IR:
IntermediateRepresentation {
    file_path: "tests/integration/language/rust/fixtures/basic_rust_code.rs",
    definitions: [
        Definition { position: { 1:5 to 1:6 }, name: "a", definition_type: VariableDefinition, scope_id: Some(0), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 2:5 to 2:6 }, name: "b", definition_type: VariableDefinition, scope_id: Some(0), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
    ],
    dependencies: [
        Dependency { source_line: 2, target_line: 1, symbol: "a", dependency_type: VariableUse, context: Some("Identifier:2:9") },
    ],
    usage: [
        Usage { position: { 2:9 to 2:10 }, name: "a", kind: Identifier, context: None },
    ],
    analysis_metadata: AnalysisMetadata {
        language: "Rust",
        total_lines: 2,
        analysis_timestamp: "now",
        lintric_version: "0.1.0",
    },
}
