---
source: crates/core/tests/integration/language/rust/mod.rs
expression: ir_snapshot_content
---
Source Code:
fn main() {
    // Function hoisting - should create dependency even though helper is defined later
    let result = helper();
    
    // Variable forward reference - should NOT create dependency
    let y = x + 1;
    let x = 42;
}

// Helper function defined after main - but should still be accessible due to hoisting
fn helper() -> i32 {
    42
}

// Test struct hoisting
fn use_struct() {
    let instance = MyStruct { field: 10 };
}

struct MyStruct {
    field: i32,
}

// Test enum hoisting  
fn use_enum() {
    let value = MyEnum::Variant1;
}

enum MyEnum {
    Variant1,
    Variant2,
}

// Test type hoisting
fn use_type() -> MyType {
    42
}

type MyType = i32;

AST:
(source_file
  (function_item
    name: (identifier "main")
    parameters: (parameters)
    body: (block
      (line_comment)
      (let_declaration
        pattern: (identifier "result")
        value: (call_expression
          function: (identifier "helper")
          arguments: (arguments)
        )
      )
      (line_comment)
      (let_declaration
        pattern: (identifier "y")
        value: (binary_expression
          left: (identifier "x")
          right: (integer_literal "1")
        )
      )
      (let_declaration
        pattern: (identifier "x")
        value: (integer_literal "42")
      )
    )
  )
  (line_comment)
  (function_item
    name: (identifier "helper")
    parameters: (parameters)
    return_type: (primitive_type "i32")
    body: (block
      (integer_literal "42")
    )
  )
  (line_comment)
  (function_item
    name: (identifier "use_struct")
    parameters: (parameters)
    body: (block
      (let_declaration
        pattern: (identifier "instance")
        value: (struct_expression
          name: (type_identifier "MyStruct")
          body: (field_initializer_list
            (field_initializer
              field: (field_identifier "field")
              value: (integer_literal "10")
            )
          )
        )
      )
    )
  )
  (struct_item
    name: (type_identifier "MyStruct")
    body: (field_declaration_list
      (field_declaration
        name: (field_identifier "field")
        type: (primitive_type "i32")
      )
    )
  )
  (line_comment)
  (function_item
    name: (identifier "use_enum")
    parameters: (parameters)
    body: (block
      (let_declaration
        pattern: (identifier "value")
        value: (scoped_identifier "MyEnum::Variant1"
          path: (identifier "MyEnum")
          name: (identifier "Variant1")
        )
      )
    )
  )
  (enum_item
    name: (type_identifier "MyEnum")
    body: (enum_variant_list
      (enum_variant
        name: (identifier "Variant1")
      )
      (enum_variant
        name: (identifier "Variant2")
      )
    )
  )
  (line_comment)
  (function_item
    name: (identifier "use_type")
    parameters: (parameters)
    return_type: (type_identifier "MyType")
    body: (block
      (integer_literal "42")
    )
  )
  (type_item
    name: (type_identifier "MyType")
    type: (primitive_type "i32")
  )
)

IR:
IntermediateRepresentation {
    file_path: "tests/integration/language/rust/fixtures/hoisting_test.rs",
    definitions: [
        Definition {
            name: "main",
            position: Position {
                start_line: 1,
                start_column: 4,
                end_line: 1,
                end_column: 8,
            },
            definition_type: FunctionDefinition,
        },
        Definition {
            name: "result",
            position: Position {
                start_line: 3,
                start_column: 9,
                end_line: 3,
                end_column: 15,
            },
            definition_type: VariableDefinition,
        },
        Definition {
            name: "y",
            position: Position {
                start_line: 6,
                start_column: 9,
                end_line: 6,
                end_column: 10,
            },
            definition_type: VariableDefinition,
        },
        Definition {
            name: "x",
            position: Position {
                start_line: 7,
                start_column: 9,
                end_line: 7,
                end_column: 10,
            },
            definition_type: VariableDefinition,
        },
        Definition {
            name: "helper",
            position: Position {
                start_line: 11,
                start_column: 4,
                end_line: 11,
                end_column: 10,
            },
            definition_type: FunctionDefinition,
        },
        Definition {
            name: "use_struct",
            position: Position {
                start_line: 16,
                start_column: 4,
                end_line: 16,
                end_column: 14,
            },
            definition_type: FunctionDefinition,
        },
        Definition {
            name: "instance",
            position: Position {
                start_line: 17,
                start_column: 9,
                end_line: 17,
                end_column: 17,
            },
            definition_type: VariableDefinition,
        },
        Definition {
            name: "MyStruct",
            position: Position {
                start_line: 20,
                start_column: 8,
                end_line: 20,
                end_column: 16,
            },
            definition_type: StructDefinition,
        },
        Definition {
            name: "field",
            position: Position {
                start_line: 21,
                start_column: 5,
                end_line: 21,
                end_column: 10,
            },
            definition_type: StructFieldDefinition,
        },
        Definition {
            name: "use_enum",
            position: Position {
                start_line: 25,
                start_column: 4,
                end_line: 25,
                end_column: 12,
            },
            definition_type: FunctionDefinition,
        },
        Definition {
            name: "value",
            position: Position {
                start_line: 26,
                start_column: 9,
                end_line: 26,
                end_column: 14,
            },
            definition_type: VariableDefinition,
        },
        Definition {
            name: "MyEnum",
            position: Position {
                start_line: 29,
                start_column: 6,
                end_line: 29,
                end_column: 12,
            },
            definition_type: EnumDefinition,
        },
        Definition {
            name: "use_type",
            position: Position {
                start_line: 35,
                start_column: 4,
                end_line: 35,
                end_column: 12,
            },
            definition_type: FunctionDefinition,
        },
        Definition {
            name: "MyType",
            position: Position {
                start_line: 39,
                start_column: 6,
                end_line: 39,
                end_column: 12,
            },
            definition_type: TypeDefinition,
        },
    ],
    dependencies: [
        Dependency {
            source_line: 3,
            target_line: 11,
            symbol: "helper",
            dependency_type: FunctionCall,
            context: Some(
                "CallExpression:3:18",
            ),
        },
        Dependency {
            source_line: 6,
            target_line: 7,
            symbol: "x",
            dependency_type: VariableUse,
            context: Some(
                "Identifier:6:13",
            ),
        },
        Dependency {
            source_line: 17,
            target_line: 20,
            symbol: "MyStruct",
            dependency_type: TypeReference,
            context: Some(
                "TypeIdentifier:17:20",
            ),
        },
        Dependency {
            source_line: 26,
            target_line: 29,
            symbol: "MyEnum",
            dependency_type: VariableUse,
            context: Some(
                "Identifier:26:17",
            ),
        },
        Dependency {
            source_line: 35,
            target_line: 39,
            symbol: "MyType",
            dependency_type: TypeReference,
            context: Some(
                "TypeIdentifier:35:18",
            ),
        },
    ],
    usage: [
        Usage {
            name: "helper",
            kind: CallExpression,
            position: Position {
                start_line: 3,
                start_column: 18,
                end_line: 3,
                end_column: 26,
            },
            context: Some(
                "call_expression",
            ),
        },
        Usage {
            name: "x",
            kind: Identifier,
            position: Position {
                start_line: 6,
                start_column: 13,
                end_line: 6,
                end_column: 14,
            },
            context: None,
        },
        Usage {
            name: "MyStruct { field: 10 }",
            kind: StructExpression,
            position: Position {
                start_line: 17,
                start_column: 20,
                end_line: 17,
                end_column: 42,
            },
            context: None,
        },
        Usage {
            name: "MyStruct",
            kind: TypeIdentifier,
            position: Position {
                start_line: 17,
                start_column: 20,
                end_line: 17,
                end_column: 28,
            },
            context: None,
        },
        Usage {
            name: "MyEnum",
            kind: Identifier,
            position: Position {
                start_line: 26,
                start_column: 17,
                end_line: 26,
                end_column: 23,
            },
            context: Some(
                "scoped_identifier",
            ),
        },
        Usage {
            name: "Variant1",
            kind: Identifier,
            position: Position {
                start_line: 26,
                start_column: 25,
                end_line: 26,
                end_column: 33,
            },
            context: Some(
                "scoped_identifier",
            ),
        },
        Usage {
            name: "Variant1",
            kind: Identifier,
            position: Position {
                start_line: 30,
                start_column: 5,
                end_line: 30,
                end_column: 13,
            },
            context: None,
        },
        Usage {
            name: "Variant2",
            kind: Identifier,
            position: Position {
                start_line: 31,
                start_column: 5,
                end_line: 31,
                end_column: 13,
            },
            context: None,
        },
        Usage {
            name: "MyType",
            kind: TypeIdentifier,
            position: Position {
                start_line: 35,
                start_column: 18,
                end_line: 35,
                end_column: 24,
            },
            context: None,
        },
    ],
    analysis_metadata: AnalysisMetadata {
        language: "Rust",
        total_lines: 39,
        analysis_timestamp: "now",
        lintric_version: "0.1.0",
    },
}
