---
source: crates/core/tests/integration/language/rust/mod.rs
expression: ir_snapshot_content
---
Source Code:
mod my_module {
    pub struct MyStruct;
    pub fn my_function() {}
    pub const MY_CONST: i32 = 1;
}

use my_module::MyStruct;
use my_module::{my_function, MY_CONST};
use my_module::*;
use my_module as mm;

fn main() {
    let s = MyStruct;
    my_function();
    let c = MY_CONST;
    let s2 = mm::MyStruct;
}

AST:
(source_file
  (mod_item
    name: (identifier "my_module")
    body: (declaration_list
      (struct_item
        (visibility_modifier)
        name: (type_identifier "MyStruct")
      )
      (function_item
        (visibility_modifier)
        name: (identifier "my_function")
        parameters: (parameters)
        body: (block)
      )
      (const_item
        (visibility_modifier)
        name: (identifier "MY_CONST")
        type: (primitive_type "i32")
        value: (integer_literal "1")
      )
    )
  )
  (use_declaration
    argument: (scoped_identifier "my_module::MyStruct"
      path: (identifier "my_module")
      name: (identifier "MyStruct")
    )
  )
  (use_declaration
    argument: (scoped_use_list
      path: (identifier "my_module")
      list: (use_list
        (identifier "my_function")
        (identifier "MY_CONST")
      )
    )
  )
  (use_declaration
    argument: (use_wildcard
      (identifier "my_module")
    )
  )
  (use_declaration
    argument: (use_as_clause
      path: (identifier "my_module")
      alias: (identifier "mm")
    )
  )
  (function_item
    name: (identifier "main")
    parameters: (parameters)
    body: (block
      (let_declaration
        pattern: (identifier "s")
        value: (identifier "MyStruct")
      )
      (expression_statement
        (call_expression
          function: (identifier "my_function")
          arguments: (arguments)
        )
      )
      (let_declaration
        pattern: (identifier "c")
        value: (identifier "MY_CONST")
      )
      (let_declaration
        pattern: (identifier "s2")
        value: (scoped_identifier "mm::MyStruct"
          path: (identifier "mm")
          name: (identifier "MyStruct")
        )
      )
    )
  )
)

IR:
IntermediateRepresentation {
    file_path: "tests/integration/language/rust/fixtures/use_statements_dependency.rs",
    definitions: [
        Definition { position: { 1:5 to 1:14 }, name: "my_module", definition_type: ModuleDefinition, scope_id: Some(1), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 2:16 to 2:24 }, name: "MyStruct", definition_type: StructDefinition, scope_id: Some(1), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 3:12 to 3:23 }, name: "my_function", definition_type: FunctionDefinition, scope_id: Some(2), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 4:15 to 4:23 }, name: "MY_CONST", definition_type: ConstDefinition, scope_id: Some(1), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 7:16 to 7:24 }, name: "MyStruct", definition_type: ImportDefinition, scope_id: Some(0), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 8:5 to 8:14 }, name: "my_module", definition_type: ImportDefinition, scope_id: Some(0), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 8:17 to 8:28 }, name: "my_function", definition_type: ImportDefinition, scope_id: Some(0), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 8:30 to 8:38 }, name: "MY_CONST", definition_type: ImportDefinition, scope_id: Some(0), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 10:18 to 10:20 }, name: "mm", definition_type: ImportDefinition, scope_id: Some(0), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 12:4 to 12:8 }, name: "main", definition_type: FunctionDefinition, scope_id: Some(4), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 13:9 to 13:10 }, name: "s", definition_type: VariableDefinition, scope_id: Some(5), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 15:9 to 15:10 }, name: "c", definition_type: VariableDefinition, scope_id: Some(5), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 16:9 to 16:11 }, name: "s2", definition_type: VariableDefinition, scope_id: Some(5), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
    ],
    dependencies: [
        Dependency { source_line: 7, target_line: 1, symbol: "my_module", dependency_type: TypeReference, context: Some("TypeIdentifier:7:5") },
        Dependency { source_line: 7, target_line: 2, symbol: "MyStruct", dependency_type: TypeReference, context: Some("TypeIdentifier:7:16") },
        Dependency { source_line: 8, target_line: 1, symbol: "my_module", dependency_type: TypeReference, context: Some("TypeIdentifier:8:5") },
        Dependency { source_line: 8, target_line: 4, symbol: "MY_CONST", dependency_type: TypeReference, context: Some("TypeIdentifier:8:30") },
        Dependency { source_line: 9, target_line: 1, symbol: "my_module", dependency_type: TypeReference, context: Some("TypeIdentifier:9:5") },
        Dependency { source_line: 10, target_line: 1, symbol: "my_module", dependency_type: TypeReference, context: Some("TypeIdentifier:10:5") },
        Dependency { source_line: 13, target_line: 7, symbol: "MyStruct", dependency_type: VariableUse, context: Some("Identifier:13:13") },
        Dependency { source_line: 14, target_line: 8, symbol: "my_function", dependency_type: FunctionCall, context: Some("CallExpression:14:5") },
        Dependency { source_line: 15, target_line: 8, symbol: "MY_CONST", dependency_type: VariableUse, context: Some("Identifier:15:13") },
        Dependency { source_line: 16, target_line: 10, symbol: "mm", dependency_type: VariableUse, context: Some("Identifier:16:14") },
        Dependency { source_line: 7, target_line: 2, symbol: "MyStruct", dependency_type: VariableUse, context: Some("ImportDefinition:7:16") },
        Dependency { source_line: 8, target_line: 1, symbol: "my_module", dependency_type: VariableUse, context: Some("ImportDefinition:8:5") },
        Dependency { source_line: 8, target_line: 3, symbol: "my_function", dependency_type: VariableUse, context: Some("ImportDefinition:8:17") },
        Dependency { source_line: 8, target_line: 4, symbol: "MY_CONST", dependency_type: VariableUse, context: Some("ImportDefinition:8:30") },
    ],
    usage: [
        Usage { position: { 7:5 to 7:14 }, name: "my_module", kind: TypeIdentifier, context: Some("scoped_identifier") },
        Usage { position: { 7:16 to 7:24 }, name: "MyStruct", kind: TypeIdentifier, context: Some("scoped_identifier") },
        Usage { position: { 8:5 to 8:14 }, name: "my_module", kind: TypeIdentifier, context: None },
        Usage { position: { 8:17 to 8:28 }, name: "my_function", kind: TypeIdentifier, context: None },
        Usage { position: { 8:30 to 8:38 }, name: "MY_CONST", kind: TypeIdentifier, context: None },
        Usage { position: { 9:5 to 9:14 }, name: "my_module", kind: TypeIdentifier, context: None },
        Usage { position: { 10:5 to 10:14 }, name: "my_module", kind: TypeIdentifier, context: None },
        Usage { position: { 10:18 to 10:20 }, name: "mm", kind: TypeIdentifier, context: None },
        Usage { position: { 13:13 to 13:21 }, name: "MyStruct", kind: Identifier, context: None },
        Usage { position: { 14:5 to 14:18 }, name: "my_function", kind: CallExpression, context: Some("call_expression") },
        Usage { position: { 15:13 to 15:21 }, name: "MY_CONST", kind: Identifier, context: None },
        Usage { position: { 16:14 to 16:16 }, name: "mm", kind: Identifier, context: Some("scoped_identifier") },
        Usage { position: { 16:18 to 16:26 }, name: "MyStruct", kind: Identifier, context: Some("scoped_identifier") },
    ],
    analysis_metadata: AnalysisMetadata {
        language: "Rust",
        total_lines: 17,
        analysis_timestamp: "now",
        lintric_version: "0.1.0",
    },
}
