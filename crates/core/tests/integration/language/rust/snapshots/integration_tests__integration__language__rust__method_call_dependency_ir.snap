---
source: crates/core/tests/integration/language/rust/mod.rs
expression: ir_snapshot_content
---
Source Code:
struct MyStruct {
    value: i32,
}

impl MyStruct {
    fn my_method(&self) -> i32 {
        self.value
    }
}

fn main() {
    let s = MyStruct { value: 10 };
    s.my_method();
}


AST:
(source_file
  (struct_item
    name: (type_identifier "MyStruct")
    body: (field_declaration_list
      (field_declaration
        name: (field_identifier "value")
        type: (primitive_type "i32")
      )
    )
  )
  (impl_item
    type: (type_identifier "MyStruct")
    body: (declaration_list
      (function_item
        name: (identifier "my_method")
        parameters: (parameters
          (self_parameter
            (self "self")
          )
        )
        return_type: (primitive_type "i32")
        body: (block
          (field_expression
            value: (self "self")
            field: (field_identifier "value")
          )
        )
      )
    )
  )
  (function_item
    name: (identifier "main")
    parameters: (parameters)
    body: (block
      (let_declaration
        pattern: (identifier "s")
        value: (struct_expression
          name: (type_identifier "MyStruct")
          body: (field_initializer_list
            (field_initializer
              field: (field_identifier "value")
              value: (integer_literal "10")
            )
          )
        )
      )
      (expression_statement
        (call_expression
          function: (field_expression
            value: (identifier "s")
            field: (field_identifier "my_method")
          )
          arguments: (arguments)
        )
      )
    )
  )
)

IR:
IntermediateRepresentation {
    file_path: "tests/integration/language/rust/fixtures/method_call_dependency.rs",
    definitions: [
        Definition { position: { 1:8 to 1:16 }, name: "MyStruct", definition_type: StructDefinition, scope_id: Some(0), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 2:5 to 2:10 }, name: "value", definition_type: StructFieldDefinition, scope_id: Some(0), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 6:8 to 6:17 }, name: "my_method", definition_type: MethodDefinition, scope_id: Some(1), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 11:4 to 11:8 }, name: "main", definition_type: FunctionDefinition, scope_id: Some(4), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 12:9 to 12:10 }, name: "s", definition_type: VariableDefinition, scope_id: Some(5), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
    ],
    dependencies: [
        Dependency { source_line: 5, target_line: 1, symbol: "MyStruct", dependency_type: TypeReference, context: Some("TypeIdentifier:5:6") },
        Dependency { source_line: 7, target_line: 2, symbol: "value", dependency_type: StructFieldAccess, context: Some("FieldExpression:7:9") },
        Dependency { source_line: 12, target_line: 1, symbol: "MyStruct", dependency_type: TypeReference, context: Some("TypeIdentifier:12:13") },
        Dependency { source_line: 13, target_line: 6, symbol: "my_method", dependency_type: StructFieldAccess, context: Some("FieldExpression:13:5") },
        Dependency { source_line: 13, target_line: 12, symbol: "s", dependency_type: VariableUse, context: Some("Identifier:13:5") },
    ],
    usage: [
        Usage { position: { 5:6 to 5:14 }, name: "MyStruct", kind: TypeIdentifier, context: None },
        Usage { position: { 7:9 to 7:19 }, name: "value", kind: FieldExpression, context: Some("field_expression") },
        Usage { position: { 12:13 to 12:35 }, name: "MyStruct { value: 10 }", kind: StructExpression, context: None },
        Usage { position: { 12:13 to 12:21 }, name: "MyStruct", kind: TypeIdentifier, context: None },
        Usage { position: { 13:5 to 13:18 }, name: "s.my_method", kind: CallExpression, context: Some("call_expression") },
        Usage { position: { 13:5 to 13:16 }, name: "my_method", kind: FieldExpression, context: Some("field_expression") },
        Usage { position: { 13:5 to 13:6 }, name: "s", kind: Identifier, context: Some("field_expression") },
    ],
    analysis_metadata: AnalysisMetadata {
        language: "Rust",
        total_lines: 14,
        analysis_timestamp: "now",
        lintric_version: "0.1.0",
    },
}
