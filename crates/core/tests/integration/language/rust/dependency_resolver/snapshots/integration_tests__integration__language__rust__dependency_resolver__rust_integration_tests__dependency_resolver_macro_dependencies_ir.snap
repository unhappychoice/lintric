---
source: crates/core/tests/integration/language/rust/dependency_resolver/rust_integration_tests.rs
expression: ir_snapshot_content
---
Source Code:
macro_rules! create_function {
    ($name:ident, $return_type:ty) => {
        fn $name() -> $return_type {
            Default::default()
        }
    };
}

macro_rules! impl_display {
    ($type:ty) => {
        impl std::fmt::Display for $type {
            fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
                write!(f, "Custom Display")
            }
        }
    };
}

create_function!(get_number, i32);
create_function!(get_string, String);

struct CustomType;

impl_display!(CustomType);

fn main() {
    let num = get_number();
    let s = get_string();
    let custom = CustomType;
    
    println!("{} {} {}", num, s, custom);
}

AST:
(source_file
  (macro_definition
    name: (identifier "create_function")
    (macro_rule
      left: (token_tree_pattern
        (token_binding_pattern
          name: (metavariable)
          type: (fragment_specifier)
        )
        (token_binding_pattern
          name: (metavariable)
          type: (fragment_specifier)
        )
      )
      right: (token_tree
        (metavariable)
        (token_tree)
        (metavariable)
        (token_tree
          (identifier "Default")
          (token_tree)
        )
      )
    )
  )
  (macro_definition
    name: (identifier "impl_display")
    (macro_rule
      left: (token_tree_pattern
        (token_binding_pattern
          name: (metavariable)
          type: (fragment_specifier)
        )
      )
      right: (token_tree
        (identifier "std")
        (identifier "fmt")
        (identifier "Display")
        (metavariable)
        (token_tree
          (identifier "fmt")
          (token_tree
            (self "self")
            (identifier "f")
            (mutable_specifier)
            (identifier "std")
            (identifier "fmt")
            (identifier "Formatter")
          )
          (identifier "std")
          (identifier "fmt")
          (identifier "Result")
          (token_tree
            (identifier "write")
            (token_tree
              (identifier "f")
              (string_literal ""Custom Display""
                (string_content)
              )
            )
          )
        )
      )
    )
  )
  (expression_statement
    (macro_invocation
      macro: (identifier "create_function")
      (token_tree
        (identifier "get_number")
        (primitive_type "i32")
      )
    )
  )
  (expression_statement
    (macro_invocation
      macro: (identifier "create_function")
      (token_tree
        (identifier "get_string")
        (identifier "String")
      )
    )
  )
  (struct_item
    name: (type_identifier "CustomType")
  )
  (expression_statement
    (macro_invocation
      macro: (identifier "impl_display")
      (token_tree
        (identifier "CustomType")
      )
    )
  )
  (function_item
    name: (identifier "main")
    parameters: (parameters)
    body: (block
      (let_declaration
        pattern: (identifier "num")
        value: (call_expression
          function: (identifier "get_number")
          arguments: (arguments)
        )
      )
      (let_declaration
        pattern: (identifier "s")
        value: (call_expression
          function: (identifier "get_string")
          arguments: (arguments)
        )
      )
      (let_declaration
        pattern: (identifier "custom")
        value: (identifier "CustomType")
      )
      (expression_statement
        (macro_invocation
          macro: (identifier "println")
          (token_tree
            (string_literal ""{} {} {}""
              (string_content)
            )
            (identifier "num")
            (identifier "s")
            (identifier "custom")
          )
        )
      )
    )
  )
)

IR:
IntermediateRepresentation {
    file_path: "tests/integration/language/rust/dependency_resolver/fixtures/macro_dependencies.rs",
    definitions: [
        Definition { position: { 1:14 to 1:29 }, name: "create_function", definition_type: MacroDefinition, scope_id: Some(0), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 2:6 to 2:11 }, name: "$name", definition_type: MacroVariableDefinition, scope_id: Some(0), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 2:19 to 2:31 }, name: "$return_type", definition_type: MacroVariableDefinition, scope_id: Some(0), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 9:14 to 9:26 }, name: "impl_display", definition_type: MacroDefinition, scope_id: Some(0), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 10:6 to 10:11 }, name: "$type", definition_type: MacroVariableDefinition, scope_id: Some(0), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 22:8 to 22:18 }, name: "CustomType", definition_type: StructDefinition, scope_id: Some(0), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 26:4 to 26:8 }, name: "main", definition_type: FunctionDefinition, scope_id: Some(1), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 27:9 to 27:12 }, name: "num", definition_type: VariableDefinition, scope_id: Some(2), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 28:9 to 28:10 }, name: "s", definition_type: VariableDefinition, scope_id: Some(2), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 29:9 to 29:15 }, name: "custom", definition_type: VariableDefinition, scope_id: Some(2), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
    ],
    dependencies: [
        Dependency { source_line: 3, target_line: 2, symbol: "$name", dependency_type: MacroVariable, context: Some("Metavariable:3:12") },
        Dependency { source_line: 3, target_line: 2, symbol: "$return_type", dependency_type: MacroVariable, context: Some("Metavariable:3:23") },
        Dependency { source_line: 11, target_line: 10, symbol: "$type", dependency_type: MacroVariable, context: Some("Metavariable:11:36") },
        Dependency { source_line: 19, target_line: 1, symbol: "create_function", dependency_type: VariableUse, context: Some("Identifier:19:1") },
        Dependency { source_line: 20, target_line: 1, symbol: "create_function", dependency_type: VariableUse, context: Some("Identifier:20:1") },
        Dependency { source_line: 24, target_line: 9, symbol: "impl_display", dependency_type: VariableUse, context: Some("Identifier:24:1") },
        Dependency { source_line: 24, target_line: 22, symbol: "CustomType", dependency_type: VariableUse, context: Some("Identifier:24:15") },
        Dependency { source_line: 29, target_line: 22, symbol: "CustomType", dependency_type: VariableUse, context: Some("Identifier:29:18") },
        Dependency { source_line: 31, target_line: 27, symbol: "num", dependency_type: VariableUse, context: Some("Identifier:31:26") },
        Dependency { source_line: 31, target_line: 28, symbol: "s", dependency_type: VariableUse, context: Some("Identifier:31:31") },
        Dependency { source_line: 31, target_line: 29, symbol: "custom", dependency_type: VariableUse, context: Some("Identifier:31:34") },
    ],
    usage: [
        Usage { position: { 1:14 to 1:29 }, name: "create_function", kind: Identifier, context: None },
        Usage { position: { 2:6 to 2:11 }, name: "$name", kind: Metavariable, context: None },
        Usage { position: { 2:19 to 2:31 }, name: "$return_type", kind: Metavariable, context: None },
        Usage { position: { 3:12 to 3:17 }, name: "$name", kind: Metavariable, context: None },
        Usage { position: { 3:23 to 3:35 }, name: "$return_type", kind: Metavariable, context: None },
        Usage { position: { 4:13 to 4:20 }, name: "Default", kind: Identifier, context: None },
        Usage { position: { 9:14 to 9:26 }, name: "impl_display", kind: Identifier, context: None },
        Usage { position: { 10:6 to 10:11 }, name: "$type", kind: Metavariable, context: None },
        Usage { position: { 11:14 to 11:17 }, name: "std", kind: Identifier, context: None },
        Usage { position: { 11:19 to 11:22 }, name: "fmt", kind: Identifier, context: None },
        Usage { position: { 11:24 to 11:31 }, name: "Display", kind: Identifier, context: None },
        Usage { position: { 11:36 to 11:41 }, name: "$type", kind: Metavariable, context: None },
        Usage { position: { 12:16 to 12:19 }, name: "fmt", kind: Identifier, context: None },
        Usage { position: { 12:27 to 12:28 }, name: "f", kind: Identifier, context: None },
        Usage { position: { 12:35 to 12:38 }, name: "std", kind: Identifier, context: None },
        Usage { position: { 12:40 to 12:43 }, name: "fmt", kind: Identifier, context: None },
        Usage { position: { 12:45 to 12:54 }, name: "Formatter", kind: Identifier, context: None },
        Usage { position: { 12:59 to 12:62 }, name: "std", kind: Identifier, context: None },
        Usage { position: { 12:64 to 12:67 }, name: "fmt", kind: Identifier, context: None },
        Usage { position: { 12:69 to 12:75 }, name: "Result", kind: Identifier, context: None },
        Usage { position: { 13:17 to 13:22 }, name: "write", kind: Identifier, context: None },
        Usage { position: { 13:24 to 13:25 }, name: "f", kind: Identifier, context: None },
        Usage { position: { 19:1 to 19:16 }, name: "create_function", kind: Identifier, context: None },
        Usage { position: { 19:18 to 19:28 }, name: "get_number", kind: Identifier, context: None },
        Usage { position: { 20:1 to 20:16 }, name: "create_function", kind: Identifier, context: None },
        Usage { position: { 20:18 to 20:28 }, name: "get_string", kind: Identifier, context: None },
        Usage { position: { 20:30 to 20:36 }, name: "String", kind: Identifier, context: None },
        Usage { position: { 24:1 to 24:13 }, name: "impl_display", kind: Identifier, context: None },
        Usage { position: { 24:15 to 24:25 }, name: "CustomType", kind: Identifier, context: None },
        Usage { position: { 27:15 to 27:27 }, name: "get_number", kind: CallExpression, context: Some("call_expression") },
        Usage { position: { 28:13 to 28:25 }, name: "get_string", kind: CallExpression, context: Some("call_expression") },
        Usage { position: { 29:18 to 29:28 }, name: "CustomType", kind: Identifier, context: None },
        Usage { position: { 31:5 to 31:12 }, name: "println", kind: Identifier, context: None },
        Usage { position: { 31:26 to 31:29 }, name: "num", kind: Identifier, context: None },
        Usage { position: { 31:31 to 31:32 }, name: "s", kind: Identifier, context: None },
        Usage { position: { 31:34 to 31:40 }, name: "custom", kind: Identifier, context: None },
    ],
    analysis_metadata: AnalysisMetadata {
        language: "Rust",
        total_lines: 32,
        analysis_timestamp: "now",
        lintric_version: "0.1.0",
    },
}
