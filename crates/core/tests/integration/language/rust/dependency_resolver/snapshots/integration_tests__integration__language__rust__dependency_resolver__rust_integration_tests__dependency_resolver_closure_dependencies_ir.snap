---
source: crates/core/tests/integration/language/rust/dependency_resolver/rust_integration_tests.rs
expression: ir_snapshot_content
---
Source Code:
fn main() {
    let captured = 42;
    let mut mutable_capture = 10;
    
    let closure = || {
        println!("{}", captured);
        mutable_capture += 1;
        println!("{}", mutable_capture);
    };
    
    closure();
    
    let move_closure = move || {
        println!("Moved: {}", captured);
    };
    
    move_closure();
}

AST:
(source_file
  (function_item
    name: (identifier "main")
    parameters: (parameters)
    body: (block
      (let_declaration
        pattern: (identifier "captured")
        value: (integer_literal "42")
      )
      (let_declaration
        (mutable_specifier)
        pattern: (identifier "mutable_capture")
        value: (integer_literal "10")
      )
      (let_declaration
        pattern: (identifier "closure")
        value: (closure_expression
          parameters: (closure_parameters)
          body: (block
            (expression_statement
              (macro_invocation
                macro: (identifier "println")
                (token_tree
                  (string_literal ""{}""
                    (string_content)
                  )
                  (identifier "captured")
                )
              )
            )
            (expression_statement
              (compound_assignment_expr
                left: (identifier "mutable_capture")
                right: (integer_literal "1")
              )
            )
            (expression_statement
              (macro_invocation
                macro: (identifier "println")
                (token_tree
                  (string_literal ""{}""
                    (string_content)
                  )
                  (identifier "mutable_capture")
                )
              )
            )
          )
        )
      )
      (expression_statement
        (call_expression
          function: (identifier "closure")
          arguments: (arguments)
        )
      )
      (let_declaration
        pattern: (identifier "move_closure")
        value: (closure_expression
          parameters: (closure_parameters)
          body: (block
            (expression_statement
              (macro_invocation
                macro: (identifier "println")
                (token_tree
                  (string_literal ""Moved: {}""
                    (string_content)
                  )
                  (identifier "captured")
                )
              )
            )
          )
        )
      )
      (expression_statement
        (call_expression
          function: (identifier "move_closure")
          arguments: (arguments)
        )
      )
    )
  )
)

IR:
IntermediateRepresentation {
    file_path: "tests/integration/language/rust/dependency_resolver/fixtures/closure_dependencies.rs",
    definitions: [
        Definition { position: { 1:4 to 1:8 }, name: "main", definition_type: FunctionDefinition, scope_id: Some(1), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 2:9 to 2:17 }, name: "captured", definition_type: VariableDefinition, scope_id: Some(2), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 3:13 to 3:28 }, name: "mutable_capture", definition_type: VariableDefinition, scope_id: Some(2), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 5:9 to 5:16 }, name: "closure", definition_type: VariableDefinition, scope_id: Some(2), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 13:9 to 13:21 }, name: "move_closure", definition_type: VariableDefinition, scope_id: Some(2), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
    ],
    dependencies: [
        Dependency { source_line: 6, target_line: 2, symbol: "captured", dependency_type: VariableUse, context: Some("Identifier:6:24") },
        Dependency { source_line: 7, target_line: 3, symbol: "mutable_capture", dependency_type: VariableUse, context: Some("Identifier:7:9") },
        Dependency { source_line: 8, target_line: 3, symbol: "mutable_capture", dependency_type: VariableUse, context: Some("Identifier:8:24") },
        Dependency { source_line: 11, target_line: 5, symbol: "closure", dependency_type: FunctionCall, context: Some("CallExpression:11:5") },
        Dependency { source_line: 14, target_line: 2, symbol: "captured", dependency_type: VariableUse, context: Some("Identifier:14:31") },
        Dependency { source_line: 17, target_line: 13, symbol: "move_closure", dependency_type: FunctionCall, context: Some("CallExpression:17:5") },
    ],
    usage: [
        Usage { position: { 6:9 to 6:16 }, name: "println", kind: Identifier, context: None },
        Usage { position: { 6:24 to 6:32 }, name: "captured", kind: Identifier, context: None },
        Usage { position: { 7:9 to 7:24 }, name: "mutable_capture", kind: Identifier, context: None },
        Usage { position: { 8:9 to 8:16 }, name: "println", kind: Identifier, context: None },
        Usage { position: { 8:24 to 8:39 }, name: "mutable_capture", kind: Identifier, context: None },
        Usage { position: { 11:5 to 11:14 }, name: "closure", kind: CallExpression, context: Some("call_expression") },
        Usage { position: { 14:9 to 14:16 }, name: "println", kind: Identifier, context: None },
        Usage { position: { 14:31 to 14:39 }, name: "captured", kind: Identifier, context: None },
        Usage { position: { 17:5 to 17:19 }, name: "move_closure", kind: CallExpression, context: Some("call_expression") },
    ],
    analysis_metadata: AnalysisMetadata {
        language: "Rust",
        total_lines: 18,
        analysis_timestamp: "now",
        lintric_version: "0.1.0",
    },
}
