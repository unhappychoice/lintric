---
source: crates/core/tests/integration/language/rust/dependency_resolver/rust_integration_tests.rs
expression: ir_snapshot_content
---
Source Code:
trait Clone {
    fn clone(&self) -> Self;
}

trait Display {
    fn display(&self) -> String;
}

fn process_item<T: Clone + Display>(item: &T) -> String {
    let cloned = item.clone();
    cloned.display()
}

struct Item {
    value: i32,
}

impl Clone for Item {
    fn clone(&self) -> Self {
        Item { value: self.value }
    }
}

impl Display for Item {
    fn display(&self) -> String {
        format!("Item({})", self.value)
    }
}

fn main() {
    let item = Item { value: 42 };
    let result = process_item(&item);
    println!("{}", result);
}

AST:
(source_file
  (trait_item
    name: (type_identifier "Clone")
    body: (declaration_list
      (function_signature_item
        name: (identifier "clone")
        parameters: (parameters
          (self_parameter
            (self "self")
          )
        )
        return_type: (type_identifier "Self")
      )
    )
  )
  (trait_item
    name: (type_identifier "Display")
    body: (declaration_list
      (function_signature_item
        name: (identifier "display")
        parameters: (parameters
          (self_parameter
            (self "self")
          )
        )
        return_type: (type_identifier "String")
      )
    )
  )
  (function_item
    name: (identifier "process_item")
    type_parameters: (type_parameters
      (constrained_type_parameter
        left: (type_identifier "T")
        bounds: (trait_bounds
          (type_identifier "Clone")
          (type_identifier "Display")
        )
      )
    )
    parameters: (parameters
      (parameter
        pattern: (identifier "item")
        type: (reference_type
          type: (type_identifier "T")
        )
      )
    )
    return_type: (type_identifier "String")
    body: (block
      (let_declaration
        pattern: (identifier "cloned")
        value: (call_expression
          function: (field_expression
            value: (identifier "item")
            field: (field_identifier "clone")
          )
          arguments: (arguments)
        )
      )
      (call_expression
        function: (field_expression
          value: (identifier "cloned")
          field: (field_identifier "display")
        )
        arguments: (arguments)
      )
    )
  )
  (struct_item
    name: (type_identifier "Item")
    body: (field_declaration_list
      (field_declaration
        name: (field_identifier "value")
        type: (primitive_type "i32")
      )
    )
  )
  (impl_item
    trait: (type_identifier "Clone")
    type: (type_identifier "Item")
    body: (declaration_list
      (function_item
        name: (identifier "clone")
        parameters: (parameters
          (self_parameter
            (self "self")
          )
        )
        return_type: (type_identifier "Self")
        body: (block
          (struct_expression
            name: (type_identifier "Item")
            body: (field_initializer_list
              (field_initializer
                field: (field_identifier "value")
                value: (field_expression
                  value: (self "self")
                  field: (field_identifier "value")
                )
              )
            )
          )
        )
      )
    )
  )
  (impl_item
    trait: (type_identifier "Display")
    type: (type_identifier "Item")
    body: (declaration_list
      (function_item
        name: (identifier "display")
        parameters: (parameters
          (self_parameter
            (self "self")
          )
        )
        return_type: (type_identifier "String")
        body: (block
          (macro_invocation
            macro: (identifier "format")
            (token_tree
              (string_literal ""Item({})""
                (string_content)
              )
              (self "self")
              (identifier "value")
            )
          )
        )
      )
    )
  )
  (function_item
    name: (identifier "main")
    parameters: (parameters)
    body: (block
      (let_declaration
        pattern: (identifier "item")
        value: (struct_expression
          name: (type_identifier "Item")
          body: (field_initializer_list
            (field_initializer
              field: (field_identifier "value")
              value: (integer_literal "42")
            )
          )
        )
      )
      (let_declaration
        pattern: (identifier "result")
        value: (call_expression
          function: (identifier "process_item")
          arguments: (arguments
            (reference_expression
              value: (identifier "item")
            )
          )
        )
      )
      (expression_statement
        (macro_invocation
          macro: (identifier "println")
          (token_tree
            (string_literal ""{}""
              (string_content)
            )
            (identifier "result")
          )
        )
      )
    )
  )
)

IR:
IntermediateRepresentation {
    file_path: "tests/integration/language/rust/dependency_resolver/fixtures/advanced_generics.rs",
    definitions: [
        Definition { position: { 1:7 to 1:12 }, name: "Clone", definition_type: TypeDefinition, scope_id: Some(1), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 2:8 to 2:13 }, name: "clone", definition_type: FunctionDefinition, scope_id: Some(1), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 5:7 to 5:14 }, name: "Display", definition_type: TypeDefinition, scope_id: Some(2), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 6:8 to 6:15 }, name: "display", definition_type: FunctionDefinition, scope_id: Some(2), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 9:4 to 9:16 }, name: "process_item", definition_type: FunctionDefinition, scope_id: Some(3), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 9:17 to 9:18 }, name: "T", definition_type: TypeDefinition, scope_id: Some(3), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 9:37 to 9:41 }, name: "item", definition_type: VariableDefinition, scope_id: Some(3), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 10:9 to 10:15 }, name: "cloned", definition_type: VariableDefinition, scope_id: Some(4), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 14:8 to 14:12 }, name: "Item", definition_type: StructDefinition, scope_id: Some(0), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 15:5 to 15:10 }, name: "value", definition_type: StructFieldDefinition, scope_id: Some(0), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 19:8 to 19:13 }, name: "clone", definition_type: MethodDefinition, scope_id: Some(5), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 25:8 to 25:15 }, name: "display", definition_type: MethodDefinition, scope_id: Some(8), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 30:4 to 30:8 }, name: "main", definition_type: FunctionDefinition, scope_id: Some(11), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 31:9 to 31:13 }, name: "item", definition_type: VariableDefinition, scope_id: Some(12), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 32:9 to 32:15 }, name: "result", definition_type: VariableDefinition, scope_id: Some(12), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
    ],
    dependencies: [
        Dependency { source_line: 10, target_line: 19, symbol: "clone", dependency_type: StructFieldAccess, context: Some("FieldExpression:10:18") },
        Dependency { source_line: 10, target_line: 9, symbol: "item", dependency_type: VariableUse, context: Some("Identifier:10:18") },
        Dependency { source_line: 11, target_line: 25, symbol: "display", dependency_type: StructFieldAccess, context: Some("FieldExpression:11:5") },
        Dependency { source_line: 11, target_line: 10, symbol: "cloned", dependency_type: VariableUse, context: Some("Identifier:11:5") },
        Dependency { source_line: 18, target_line: 1, symbol: "Clone", dependency_type: TypeReference, context: Some("TypeIdentifier:18:6") },
        Dependency { source_line: 18, target_line: 14, symbol: "Item", dependency_type: TypeReference, context: Some("TypeIdentifier:18:16") },
        Dependency { source_line: 20, target_line: 14, symbol: "Item", dependency_type: TypeReference, context: Some("TypeIdentifier:20:9") },
        Dependency { source_line: 20, target_line: 15, symbol: "value", dependency_type: StructFieldAccess, context: Some("FieldExpression:20:23") },
        Dependency { source_line: 24, target_line: 5, symbol: "Display", dependency_type: TypeReference, context: Some("TypeIdentifier:24:6") },
        Dependency { source_line: 24, target_line: 14, symbol: "Item", dependency_type: TypeReference, context: Some("TypeIdentifier:24:18") },
        Dependency { source_line: 26, target_line: 15, symbol: "value", dependency_type: StructFieldAccess, context: Some("FieldExpression:26:34") },
        Dependency { source_line: 31, target_line: 14, symbol: "Item", dependency_type: TypeReference, context: Some("TypeIdentifier:31:16") },
        Dependency { source_line: 32, target_line: 9, symbol: "process_item", dependency_type: FunctionCall, context: Some("CallExpression:32:18") },
        Dependency { source_line: 32, target_line: 31, symbol: "item", dependency_type: VariableUse, context: Some("Identifier:32:32") },
        Dependency { source_line: 33, target_line: 32, symbol: "result", dependency_type: VariableUse, context: Some("Identifier:33:20") },
    ],
    usage: [
        Usage { position: { 2:8 to 2:13 }, name: "clone", kind: Identifier, context: None },
        Usage { position: { 2:24 to 2:28 }, name: "Self", kind: TypeIdentifier, context: None },
        Usage { position: { 6:8 to 6:15 }, name: "display", kind: Identifier, context: None },
        Usage { position: { 6:26 to 6:32 }, name: "String", kind: TypeIdentifier, context: None },
        Usage { position: { 9:44 to 9:45 }, name: "T", kind: TypeIdentifier, context: None },
        Usage { position: { 9:50 to 9:56 }, name: "String", kind: TypeIdentifier, context: None },
        Usage { position: { 10:18 to 10:30 }, name: "item.clone", kind: CallExpression, context: Some("call_expression") },
        Usage { position: { 10:18 to 10:28 }, name: "clone", kind: FieldExpression, context: Some("field_expression") },
        Usage { position: { 10:18 to 10:22 }, name: "item", kind: Identifier, context: Some("field_expression") },
        Usage { position: { 11:5 to 11:21 }, name: "cloned.display", kind: CallExpression, context: Some("call_expression") },
        Usage { position: { 11:5 to 11:19 }, name: "display", kind: FieldExpression, context: Some("field_expression") },
        Usage { position: { 11:5 to 11:11 }, name: "cloned", kind: Identifier, context: Some("field_expression") },
        Usage { position: { 18:6 to 18:11 }, name: "Clone", kind: TypeIdentifier, context: None },
        Usage { position: { 18:16 to 18:20 }, name: "Item", kind: TypeIdentifier, context: None },
        Usage { position: { 19:24 to 19:28 }, name: "Self", kind: TypeIdentifier, context: None },
        Usage { position: { 20:9 to 20:35 }, name: "Item { value: self.value }", kind: StructExpression, context: None },
        Usage { position: { 20:9 to 20:13 }, name: "Item", kind: TypeIdentifier, context: None },
        Usage { position: { 20:23 to 20:33 }, name: "value", kind: FieldExpression, context: Some("field_expression") },
        Usage { position: { 24:6 to 24:13 }, name: "Display", kind: TypeIdentifier, context: None },
        Usage { position: { 24:18 to 24:22 }, name: "Item", kind: TypeIdentifier, context: None },
        Usage { position: { 25:26 to 25:32 }, name: "String", kind: TypeIdentifier, context: None },
        Usage { position: { 26:9 to 26:15 }, name: "format", kind: Identifier, context: None },
        Usage { position: { 26:34 to 26:39 }, name: "value", kind: FieldExpression, context: None },
        Usage { position: { 31:16 to 31:34 }, name: "Item { value: 42 }", kind: StructExpression, context: None },
        Usage { position: { 31:16 to 31:20 }, name: "Item", kind: TypeIdentifier, context: None },
        Usage { position: { 32:18 to 32:37 }, name: "process_item", kind: CallExpression, context: Some("call_expression") },
        Usage { position: { 32:32 to 32:36 }, name: "item", kind: Identifier, context: Some("call_expression") },
        Usage { position: { 33:5 to 33:12 }, name: "println", kind: Identifier, context: None },
        Usage { position: { 33:20 to 33:26 }, name: "result", kind: Identifier, context: None },
    ],
    analysis_metadata: AnalysisMetadata {
        language: "Rust",
        total_lines: 34,
        analysis_timestamp: "now",
        lintric_version: "0.1.0",
    },
}
