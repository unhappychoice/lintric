---
source: crates/core/tests/integration/language/rust/dependency_resolver/rust_integration_tests.rs
expression: ir_snapshot_content
---
Source Code:
use std::collections::HashMap;

mod utils {
    pub fn helper() -> i32 {
        42
    }
    
    pub mod inner {
        pub fn deep_function() -> i32 {
            42
        }
    }
}

fn main() {
    let mut map = HashMap::new();
    map.insert("key", "value");
    
    let result = utils::helper();
    let deep_result = utils::inner::deep_function();
    
    println!("{} {}", result, deep_result);
}

AST:
(source_file
  (use_declaration
    argument: (scoped_identifier "std::collections::HashMap"
      path: (scoped_identifier "std::collections"
        path: (identifier "std")
        name: (identifier "collections")
      )
      name: (identifier "HashMap")
    )
  )
  (mod_item
    name: (identifier "utils")
    body: (declaration_list
      (function_item
        (visibility_modifier)
        name: (identifier "helper")
        parameters: (parameters)
        return_type: (primitive_type "i32")
        body: (block
          (integer_literal "42")
        )
      )
      (mod_item
        (visibility_modifier)
        name: (identifier "inner")
        body: (declaration_list
          (function_item
            (visibility_modifier)
            name: (identifier "deep_function")
            parameters: (parameters)
            return_type: (primitive_type "i32")
            body: (block
              (integer_literal "42")
            )
          )
        )
      )
    )
  )
  (function_item
    name: (identifier "main")
    parameters: (parameters)
    body: (block
      (let_declaration
        (mutable_specifier)
        pattern: (identifier "map")
        value: (call_expression
          function: (scoped_identifier "HashMap::new"
            path: (identifier "HashMap")
            name: (identifier "new")
          )
          arguments: (arguments)
        )
      )
      (expression_statement
        (call_expression
          function: (field_expression
            value: (identifier "map")
            field: (field_identifier "insert")
          )
          arguments: (arguments
            (string_literal ""key""
              (string_content)
            )
            (string_literal ""value""
              (string_content)
            )
          )
        )
      )
      (let_declaration
        pattern: (identifier "result")
        value: (call_expression
          function: (scoped_identifier "utils::helper"
            path: (identifier "utils")
            name: (identifier "helper")
          )
          arguments: (arguments)
        )
      )
      (let_declaration
        pattern: (identifier "deep_result")
        value: (call_expression
          function: (scoped_identifier "utils::inner::deep_function"
            path: (scoped_identifier "utils::inner"
              path: (identifier "utils")
              name: (identifier "inner")
            )
            name: (identifier "deep_function")
          )
          arguments: (arguments)
        )
      )
      (expression_statement
        (macro_invocation
          macro: (identifier "println")
          (token_tree
            (string_literal ""{} {}""
              (string_content)
            )
            (identifier "result")
            (identifier "deep_result")
          )
        )
      )
    )
  )
)

IR:
IntermediateRepresentation {
    file_path: "tests/integration/language/rust/dependency_resolver/fixtures/module_resolution.rs",
    definitions: [
        Definition { position: { 1:23 to 1:30 }, name: "HashMap", definition_type: ImportDefinition, scope_id: Some(0), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 3:5 to 3:10 }, name: "utils", definition_type: ModuleDefinition, scope_id: Some(1), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 4:12 to 4:18 }, name: "helper", definition_type: FunctionDefinition, scope_id: Some(2), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 8:13 to 8:18 }, name: "inner", definition_type: ModuleDefinition, scope_id: Some(4), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 9:16 to 9:29 }, name: "deep_function", definition_type: FunctionDefinition, scope_id: Some(5), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 15:4 to 15:8 }, name: "main", definition_type: FunctionDefinition, scope_id: Some(7), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 16:13 to 16:16 }, name: "map", definition_type: VariableDefinition, scope_id: Some(8), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 19:9 to 19:15 }, name: "result", definition_type: VariableDefinition, scope_id: Some(8), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 20:9 to 20:20 }, name: "deep_result", definition_type: VariableDefinition, scope_id: Some(8), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
    ],
    dependencies: [
        Dependency { source_line: 16, target_line: 1, symbol: "HashMap", dependency_type: VariableUse, context: Some("Identifier:16:19") },
        Dependency { source_line: 17, target_line: 16, symbol: "map", dependency_type: VariableUse, context: Some("Identifier:17:5") },
        Dependency { source_line: 19, target_line: 3, symbol: "utils", dependency_type: VariableUse, context: Some("Identifier:19:18") },
        Dependency { source_line: 19, target_line: 4, symbol: "helper", dependency_type: VariableUse, context: Some("Identifier:19:25") },
        Dependency { source_line: 20, target_line: 3, symbol: "utils", dependency_type: VariableUse, context: Some("Identifier:20:23") },
        Dependency { source_line: 20, target_line: 8, symbol: "inner", dependency_type: VariableUse, context: Some("Identifier:20:30") },
        Dependency { source_line: 20, target_line: 9, symbol: "deep_function", dependency_type: VariableUse, context: Some("Identifier:20:37") },
        Dependency { source_line: 22, target_line: 19, symbol: "result", dependency_type: VariableUse, context: Some("Identifier:22:23") },
        Dependency { source_line: 22, target_line: 20, symbol: "deep_result", dependency_type: VariableUse, context: Some("Identifier:22:31") },
    ],
    usage: [
        Usage { position: { 1:5 to 1:8 }, name: "std", kind: TypeIdentifier, context: Some("scoped_identifier") },
        Usage { position: { 1:10 to 1:21 }, name: "collections", kind: TypeIdentifier, context: Some("scoped_identifier") },
        Usage { position: { 1:23 to 1:30 }, name: "HashMap", kind: TypeIdentifier, context: Some("scoped_identifier") },
        Usage { position: { 16:19 to 16:33 }, name: "HashMap::new", kind: CallExpression, context: Some("call_expression") },
        Usage { position: { 16:19 to 16:26 }, name: "HashMap", kind: Identifier, context: Some("scoped_identifier") },
        Usage { position: { 16:28 to 16:31 }, name: "new", kind: Identifier, context: Some("scoped_identifier") },
        Usage { position: { 17:5 to 17:31 }, name: "map.insert", kind: CallExpression, context: Some("call_expression") },
        Usage { position: { 17:5 to 17:15 }, name: "insert", kind: FieldExpression, context: Some("field_expression") },
        Usage { position: { 17:5 to 17:8 }, name: "map", kind: Identifier, context: Some("field_expression") },
        Usage { position: { 19:18 to 19:33 }, name: "utils::helper", kind: CallExpression, context: Some("call_expression") },
        Usage { position: { 19:18 to 19:23 }, name: "utils", kind: Identifier, context: Some("scoped_identifier") },
        Usage { position: { 19:25 to 19:31 }, name: "helper", kind: Identifier, context: Some("scoped_identifier") },
        Usage { position: { 20:23 to 20:52 }, name: "utils::inner::deep_function", kind: CallExpression, context: Some("call_expression") },
        Usage { position: { 20:23 to 20:28 }, name: "utils", kind: Identifier, context: Some("scoped_identifier") },
        Usage { position: { 20:30 to 20:35 }, name: "inner", kind: Identifier, context: Some("scoped_identifier") },
        Usage { position: { 20:37 to 20:50 }, name: "deep_function", kind: Identifier, context: Some("scoped_identifier") },
        Usage { position: { 22:5 to 22:12 }, name: "println", kind: Identifier, context: None },
        Usage { position: { 22:23 to 22:29 }, name: "result", kind: Identifier, context: None },
        Usage { position: { 22:31 to 22:42 }, name: "deep_result", kind: Identifier, context: None },
    ],
    analysis_metadata: AnalysisMetadata {
        language: "Rust",
        total_lines: 23,
        analysis_timestamp: "now",
        lintric_version: "0.1.0",
    },
}
