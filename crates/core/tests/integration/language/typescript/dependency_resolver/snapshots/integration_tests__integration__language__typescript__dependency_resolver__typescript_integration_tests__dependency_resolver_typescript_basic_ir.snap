---
source: crates/core/tests/integration/language/typescript/dependency_resolver/typescript_integration_tests.rs
expression: ir_snapshot_content
---
Source Code:
function helper(): number {
    return 42;
}

function main() {
    const result = helper();
    console.log(result);
}

AST:
(program
  (function_declaration
    name: (identifier "helper")
    parameters: (formal_parameters)
    return_type: (type_annotation
      (predefined_type "number")
    )
    body: (statement_block
      (return_statement
        (number "42")
      )
    )
  )
  (function_declaration
    name: (identifier "main")
    parameters: (formal_parameters)
    body: (statement_block
      (lexical_declaration
        (variable_declarator
          name: (identifier "result")
          value: (call_expression
            function: (identifier "helper")
            arguments: (arguments)
          )
        )
      )
      (expression_statement
        (call_expression
          function: (member_expression
            object: (identifier "console")
            property: (property_identifier "log")
          )
          arguments: (arguments
            (identifier "result")
          )
        )
      )
    )
  )
)

IR:
IntermediateRepresentation {
    file_path: "tests/integration/language/typescript/dependency_resolver/fixtures/typescript_basic.ts",
    definitions: [
        Definition { position: { 1:10 to 1:16 }, name: "helper", definition_type: FunctionDefinition, scope_id: Some(1), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 5:10 to 5:14 }, name: "main", definition_type: FunctionDefinition, scope_id: Some(2), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 6:11 to 6:17 }, name: "result", definition_type: VariableDefinition, scope_id: Some(2), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
    ],
    dependencies: [
        Dependency { source_line: 6, target_line: 1, symbol: "helper", dependency_type: FunctionCall, context: Some("CallExpression:6:20") },
        Dependency { source_line: 7, target_line: 6, symbol: "result", dependency_type: VariableUse, context: Some("Identifier:7:17") },
    ],
    usage: [
        Usage { position: { 6:20 to 6:28 }, name: "helper", kind: CallExpression, context: Some("call_expression") },
        Usage { position: { 7:5 to 7:24 }, name: "console.log", kind: CallExpression, context: Some("call_expression") },
        Usage { position: { 7:5 to 7:12 }, name: "console", kind: Identifier, context: Some("call_expression") },
        Usage { position: { 7:13 to 7:16 }, name: "log", kind: FieldExpression, context: Some("call_expression") },
        Usage { position: { 7:17 to 7:23 }, name: "result", kind: Identifier, context: Some("call_expression") },
    ],
    analysis_metadata: AnalysisMetadata {
        language: "TypeScript",
        total_lines: 8,
        analysis_timestamp: "now",
        lintric_version: "0.1.0",
    },
}
