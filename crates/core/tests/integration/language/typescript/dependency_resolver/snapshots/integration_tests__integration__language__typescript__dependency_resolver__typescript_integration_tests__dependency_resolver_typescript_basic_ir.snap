---
source: crates/core/tests/integration/language/typescript/dependency_resolver/typescript_integration_tests.rs
expression: ir_snapshot_content
---
Source Code:
function helper(): number {
    return 42;
}

function main() {
    const result = helper();
    console.log(result);
}

AST:
(program
  (function_declaration
    name: (identifier "helper")
    parameters: (formal_parameters)
    return_type: (type_annotation
      (predefined_type "number")
    )
    body: (statement_block
      (return_statement
        (number "42")
      )
    )
  )
  (function_declaration
    name: (identifier "main")
    parameters: (formal_parameters)
    body: (statement_block
      (lexical_declaration
        (variable_declarator
          name: (identifier "result")
          value: (call_expression
            function: (identifier "helper")
            arguments: (arguments)
          )
        )
      )
      (expression_statement
        (call_expression
          function: (member_expression
            object: (identifier "console")
            property: (property_identifier "log")
          )
          arguments: (arguments
            (identifier "result")
          )
        )
      )
    )
  )
)

IR:
IntermediateRepresentation {
    file_path: "tests/integration/language/typescript/dependency_resolver/fixtures/typescript_basic.ts",
    definitions: [
        Definition {
            name: "helper",
            position: Position {
                start_line: 1,
                start_column: 10,
                end_line: 1,
                end_column: 16,
            },
            definition_type: FunctionDefinition,
        },
        Definition {
            name: "main",
            position: Position {
                start_line: 5,
                start_column: 10,
                end_line: 5,
                end_column: 14,
            },
            definition_type: FunctionDefinition,
        },
        Definition {
            name: "result",
            position: Position {
                start_line: 6,
                start_column: 11,
                end_line: 6,
                end_column: 17,
            },
            definition_type: VariableDefinition,
        },
    ],
    dependencies: [
        Dependency {
            source_line: 6,
            target_line: 1,
            symbol: "helper",
            dependency_type: FunctionCall,
            context: Some(
                "CallExpression:6:20",
            ),
        },
        Dependency {
            source_line: 7,
            target_line: 6,
            symbol: "result",
            dependency_type: VariableUse,
            context: Some(
                "Identifier:7:17",
            ),
        },
    ],
    usage: [
        Usage {
            name: "helper",
            kind: CallExpression,
            position: Position {
                start_line: 6,
                start_column: 20,
                end_line: 6,
                end_column: 28,
            },
            context: Some(
                "call_expression",
            ),
        },
        Usage {
            name: "console.log",
            kind: CallExpression,
            position: Position {
                start_line: 7,
                start_column: 5,
                end_line: 7,
                end_column: 24,
            },
            context: Some(
                "call_expression",
            ),
        },
        Usage {
            name: "console",
            kind: Identifier,
            position: Position {
                start_line: 7,
                start_column: 5,
                end_line: 7,
                end_column: 12,
            },
            context: Some(
                "call_expression",
            ),
        },
        Usage {
            name: "log",
            kind: FieldExpression,
            position: Position {
                start_line: 7,
                start_column: 13,
                end_line: 7,
                end_column: 16,
            },
            context: Some(
                "call_expression",
            ),
        },
        Usage {
            name: "result",
            kind: Identifier,
            position: Position {
                start_line: 7,
                start_column: 17,
                end_line: 7,
                end_column: 23,
            },
            context: Some(
                "call_expression",
            ),
        },
    ],
    analysis_metadata: AnalysisMetadata {
        language: "TypeScript",
        total_lines: 8,
        analysis_timestamp: "now",
        lintric_version: "0.1.0",
    },
}
