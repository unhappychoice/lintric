---
source: crates/core/tests/integration/language/typescript/mod.rs
expression: ir_snapshot_content
---
Source Code:
class MyClass {
    constructor(public value: number){}
    greet() { console.log(this.value); }
}
let instance = new MyClass(10);
instance.greet();

AST:
(program
  (class_declaration
    name: (type_identifier "MyClass")
    body: (class_body
      (method_definition
        name: (property_identifier "constructor")
        parameters: (formal_parameters
          (required_parameter
            (accessibility_modifier "public")
            pattern: (identifier "value")
            type: (type_annotation
              (predefined_type "number")
            )
          )
        )
        body: (statement_block)
      )
      (method_definition
        name: (property_identifier "greet")
        parameters: (formal_parameters)
        body: (statement_block
          (expression_statement
            (call_expression
              function: (member_expression
                object: (identifier "console")
                property: (property_identifier "log")
              )
              arguments: (arguments
                (member_expression
                  object: (this "this")
                  property: (property_identifier "value")
                )
              )
            )
          )
        )
      )
    )
  )
  (lexical_declaration
    (variable_declarator
      name: (identifier "instance")
      value: (new_expression
        constructor: (identifier "MyClass")
        arguments: (arguments
          (number "10")
        )
      )
    )
  )
  (expression_statement
    (call_expression
      function: (member_expression
        object: (identifier "instance")
        property: (property_identifier "greet")
      )
      arguments: (arguments)
    )
  )
)

IR:
IntermediateRepresentation {
    file_path: "tests/integration/language/typescript/fixtures/class_method_dependency.ts",
    definitions: [
        Definition { position: { 1:7 to 1:14 }, name: "MyClass", definition_type: ClassDefinition, scope_id: Some(1), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 2:5 to 2:16 }, name: "constructor", definition_type: MethodDefinition, scope_id: Some(2), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 2:24 to 2:29 }, name: "value", definition_type: VariableDefinition, scope_id: Some(2), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 3:5 to 3:10 }, name: "greet", definition_type: MethodDefinition, scope_id: Some(3), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 5:5 to 5:13 }, name: "instance", definition_type: VariableDefinition, scope_id: Some(0), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
    ],
    dependencies: [
        Dependency { source_line: 3, target_line: 2, symbol: "value", dependency_type: StructFieldAccess, context: Some("FieldExpression:3:32") },
        Dependency { source_line: 5, target_line: 1, symbol: "MyClass", dependency_type: VariableUse, context: Some("Identifier:5:20") },
        Dependency { source_line: 6, target_line: 5, symbol: "instance", dependency_type: VariableUse, context: Some("Identifier:6:1") },
        Dependency { source_line: 6, target_line: 3, symbol: "greet", dependency_type: StructFieldAccess, context: Some("FieldExpression:6:10") },
    ],
    usage: [
        Usage { position: { 2:5 to 2:16 }, name: "constructor", kind: FieldExpression, context: None },
        Usage { position: { 3:5 to 3:10 }, name: "greet", kind: FieldExpression, context: None },
        Usage { position: { 3:15 to 3:38 }, name: "console.log", kind: CallExpression, context: Some("call_expression") },
        Usage { position: { 3:15 to 3:22 }, name: "console", kind: Identifier, context: Some("call_expression") },
        Usage { position: { 3:23 to 3:26 }, name: "log", kind: FieldExpression, context: Some("call_expression") },
        Usage { position: { 3:32 to 3:37 }, name: "value", kind: FieldExpression, context: Some("call_expression") },
        Usage { position: { 5:20 to 5:27 }, name: "MyClass", kind: Identifier, context: None },
        Usage { position: { 6:1 to 6:17 }, name: "instance.greet", kind: CallExpression, context: Some("call_expression") },
        Usage { position: { 6:1 to 6:9 }, name: "instance", kind: Identifier, context: Some("call_expression") },
        Usage { position: { 6:10 to 6:15 }, name: "greet", kind: FieldExpression, context: Some("call_expression") },
    ],
    analysis_metadata: AnalysisMetadata {
        language: "TypeScript",
        total_lines: 6,
        analysis_timestamp: "now",
        lintric_version: "0.1.0",
    },
}
