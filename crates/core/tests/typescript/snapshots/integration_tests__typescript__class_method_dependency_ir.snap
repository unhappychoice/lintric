---
source: core/tests/typescript/mod.rs
expression: "serde_json::to_string_pretty(&ir).unwrap()"
---
{
  "file_path": "tests/typescript/fixtures/class_method_dependency.ts",
  "definitions": [
    {
      "name": "MyClass",
      "position": {
        "start_line": 1,
        "start_column": 7,
        "end_line": 1,
        "end_column": 14
      },
      "definition_type": "ClassDefinition"
    },
    {
      "name": "constructor",
      "position": {
        "start_line": 2,
        "start_column": 5,
        "end_line": 2,
        "end_column": 16
      },
      "definition_type": "FunctionDefinition"
    },
    {
      "name": "value",
      "position": {
        "start_line": 2,
        "start_column": 24,
        "end_line": 2,
        "end_column": 29
      },
      "definition_type": "VariableDefinition"
    },
    {
      "name": "greet",
      "position": {
        "start_line": 3,
        "start_column": 5,
        "end_line": 3,
        "end_column": 10
      },
      "definition_type": "FunctionDefinition"
    },
    {
      "name": "instance",
      "position": {
        "start_line": 5,
        "start_column": 5,
        "end_line": 5,
        "end_column": 13
      },
      "definition_type": "VariableDefinition"
    }
  ],
  "dependencies": [
    {
      "source_line": 3,
      "target_line": 2,
      "symbol": "value",
      "dependency_type": "StructFieldAccess",
      "context": "field_access"
    },
    {
      "source_line": 5,
      "target_line": 1,
      "symbol": "MyClass",
      "dependency_type": "VariableUse",
      "context": "variable_use"
    },
    {
      "source_line": 6,
      "target_line": 5,
      "symbol": "instance",
      "dependency_type": "VariableUse",
      "context": "variable_use"
    },
    {
      "source_line": 6,
      "target_line": 3,
      "symbol": "greet",
      "dependency_type": "StructFieldAccess",
      "context": "field_access"
    }
  ],
  "usage": [
    {
      "name": "constructor",
      "kind": "FieldExpression",
      "position": {
        "start_line": 2,
        "start_column": 5,
        "end_line": 2,
        "end_column": 16
      }
    },
    {
      "name": "greet",
      "kind": "FieldExpression",
      "position": {
        "start_line": 3,
        "start_column": 5,
        "end_line": 3,
        "end_column": 10
      }
    },
    {
      "name": "console.log(this.value)",
      "kind": "CallExpression",
      "position": {
        "start_line": 3,
        "start_column": 15,
        "end_line": 3,
        "end_column": 38
      }
    },
    {
      "name": "console",
      "kind": "Identifier",
      "position": {
        "start_line": 3,
        "start_column": 15,
        "end_line": 3,
        "end_column": 22
      }
    },
    {
      "name": "log",
      "kind": "FieldExpression",
      "position": {
        "start_line": 3,
        "start_column": 23,
        "end_line": 3,
        "end_column": 26
      }
    },
    {
      "name": "value",
      "kind": "FieldExpression",
      "position": {
        "start_line": 3,
        "start_column": 32,
        "end_line": 3,
        "end_column": 37
      }
    },
    {
      "name": "MyClass",
      "kind": "Identifier",
      "position": {
        "start_line": 5,
        "start_column": 20,
        "end_line": 5,
        "end_column": 27
      }
    },
    {
      "name": "instance.greet()",
      "kind": "CallExpression",
      "position": {
        "start_line": 6,
        "start_column": 1,
        "end_line": 6,
        "end_column": 17
      }
    },
    {
      "name": "instance",
      "kind": "Identifier",
      "position": {
        "start_line": 6,
        "start_column": 1,
        "end_line": 6,
        "end_column": 9
      }
    },
    {
      "name": "greet",
      "kind": "FieldExpression",
      "position": {
        "start_line": 6,
        "start_column": 10,
        "end_line": 6,
        "end_column": 15
      }
    }
  ],
  "analysis_metadata": {
    "language": "TypeScript",
    "total_lines": 6,
    "analysis_timestamp": "now",
    "lintric_version": "0.1.0"
  }
}
