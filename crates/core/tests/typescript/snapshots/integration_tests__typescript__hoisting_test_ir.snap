---
source: crates/core/tests/typescript/mod.rs
expression: ir_snapshot_content
---
Source Code:
function main() {
    // Function hoisting - should create dependency even though helper is defined later
    const result = helper();
    
    // Variable forward reference - should NOT create dependency (let/const are not hoisted)
    const y = x + 1;
    const x = 42;
}

// Helper function defined after main - but should still be accessible due to hoisting
function helper(): number {
    return 42;
}

// Test interface hoisting
function useInterface() {
    const obj: MyInterface = { field: 10 };
}

interface MyInterface {
    field: number;
}

// Test class hoisting
function useClass() {
    const instance = new MyClass();
}

class MyClass {
    constructor() {}
}

// Test type hoisting
function useType(): MyType {
    return 42;
}

type MyType = number;

// Test enum hoisting
function useEnum() {
    const value = MyEnum.Value1;
}

enum MyEnum {
    Value1,
    Value2
}

AST:
(program
  (function_declaration
    name: (identifier "main")
    parameters: (formal_parameters)
    body: (statement_block
      (comment)
      (lexical_declaration
        (variable_declarator
          name: (identifier "result")
          value: (call_expression
            function: (identifier "helper")
            arguments: (arguments)
          )
        )
      )
      (comment)
      (lexical_declaration
        (variable_declarator
          name: (identifier "y")
          value: (binary_expression
            left: (identifier "x")
            right: (number "1")
          )
        )
      )
      (lexical_declaration
        (variable_declarator
          name: (identifier "x")
          value: (number "42")
        )
      )
    )
  )
  (comment)
  (function_declaration
    name: (identifier "helper")
    parameters: (formal_parameters)
    return_type: (type_annotation
      (predefined_type "number")
    )
    body: (statement_block
      (return_statement
        (number "42")
      )
    )
  )
  (comment)
  (function_declaration
    name: (identifier "useInterface")
    parameters: (formal_parameters)
    body: (statement_block
      (lexical_declaration
        (variable_declarator
          name: (identifier "obj")
          type: (type_annotation
            (type_identifier "MyInterface")
          )
          value: (object
            (pair
              key: (property_identifier "field")
              value: (number "10")
            )
          )
        )
      )
    )
  )
  (interface_declaration
    name: (type_identifier "MyInterface")
    body: (interface_body
      (property_signature
        name: (property_identifier "field")
        type: (type_annotation
          (predefined_type "number")
        )
      )
    )
  )
  (comment)
  (function_declaration
    name: (identifier "useClass")
    parameters: (formal_parameters)
    body: (statement_block
      (lexical_declaration
        (variable_declarator
          name: (identifier "instance")
          value: (new_expression
            constructor: (identifier "MyClass")
            arguments: (arguments)
          )
        )
      )
    )
  )
  (class_declaration
    name: (type_identifier "MyClass")
    body: (class_body
      (method_definition
        name: (property_identifier "constructor")
        parameters: (formal_parameters)
        body: (statement_block)
      )
    )
  )
  (comment)
  (function_declaration
    name: (identifier "useType")
    parameters: (formal_parameters)
    return_type: (type_annotation
      (type_identifier "MyType")
    )
    body: (statement_block
      (return_statement
        (number "42")
      )
    )
  )
  (type_alias_declaration
    name: (type_identifier "MyType")
    value: (predefined_type "number")
  )
  (comment)
  (function_declaration
    name: (identifier "useEnum")
    parameters: (formal_parameters)
    body: (statement_block
      (lexical_declaration
        (variable_declarator
          name: (identifier "value")
          value: (member_expression
            object: (identifier "MyEnum")
            property: (property_identifier "Value1")
          )
        )
      )
    )
  )
  (enum_declaration
    name: (identifier "MyEnum")
    body: (enum_body
      name: (property_identifier "Value1")
      name: (property_identifier "Value2")
    )
  )
)

IR:
IntermediateRepresentation {
    file_path: "tests/typescript/fixtures/hoisting_test.ts",
    definitions: [
        Definition {
            name: "main",
            position: Position {
                start_line: 1,
                start_column: 10,
                end_line: 1,
                end_column: 14,
            },
            definition_type: FunctionDefinition,
        },
        Definition {
            name: "result",
            position: Position {
                start_line: 3,
                start_column: 11,
                end_line: 3,
                end_column: 17,
            },
            definition_type: VariableDefinition,
        },
        Definition {
            name: "y",
            position: Position {
                start_line: 6,
                start_column: 11,
                end_line: 6,
                end_column: 12,
            },
            definition_type: VariableDefinition,
        },
        Definition {
            name: "x",
            position: Position {
                start_line: 7,
                start_column: 11,
                end_line: 7,
                end_column: 12,
            },
            definition_type: VariableDefinition,
        },
        Definition {
            name: "helper",
            position: Position {
                start_line: 11,
                start_column: 10,
                end_line: 11,
                end_column: 16,
            },
            definition_type: FunctionDefinition,
        },
        Definition {
            name: "useInterface",
            position: Position {
                start_line: 16,
                start_column: 10,
                end_line: 16,
                end_column: 22,
            },
            definition_type: FunctionDefinition,
        },
        Definition {
            name: "obj",
            position: Position {
                start_line: 17,
                start_column: 11,
                end_line: 17,
                end_column: 14,
            },
            definition_type: VariableDefinition,
        },
        Definition {
            name: "MyInterface",
            position: Position {
                start_line: 20,
                start_column: 11,
                end_line: 20,
                end_column: 22,
            },
            definition_type: InterfaceDefinition,
        },
        Definition {
            name: "field",
            position: Position {
                start_line: 21,
                start_column: 5,
                end_line: 21,
                end_column: 10,
            },
            definition_type: PropertyDefinition,
        },
        Definition {
            name: "useClass",
            position: Position {
                start_line: 25,
                start_column: 10,
                end_line: 25,
                end_column: 18,
            },
            definition_type: FunctionDefinition,
        },
        Definition {
            name: "instance",
            position: Position {
                start_line: 26,
                start_column: 11,
                end_line: 26,
                end_column: 19,
            },
            definition_type: VariableDefinition,
        },
        Definition {
            name: "MyClass",
            position: Position {
                start_line: 29,
                start_column: 7,
                end_line: 29,
                end_column: 14,
            },
            definition_type: ClassDefinition,
        },
        Definition {
            name: "constructor",
            position: Position {
                start_line: 30,
                start_column: 5,
                end_line: 30,
                end_column: 16,
            },
            definition_type: FunctionDefinition,
        },
        Definition {
            name: "useType",
            position: Position {
                start_line: 34,
                start_column: 10,
                end_line: 34,
                end_column: 17,
            },
            definition_type: FunctionDefinition,
        },
        Definition {
            name: "MyType",
            position: Position {
                start_line: 38,
                start_column: 6,
                end_line: 38,
                end_column: 12,
            },
            definition_type: TypeDefinition,
        },
        Definition {
            name: "useEnum",
            position: Position {
                start_line: 41,
                start_column: 10,
                end_line: 41,
                end_column: 17,
            },
            definition_type: FunctionDefinition,
        },
        Definition {
            name: "value",
            position: Position {
                start_line: 42,
                start_column: 11,
                end_line: 42,
                end_column: 16,
            },
            definition_type: VariableDefinition,
        },
    ],
    dependencies: [
        Dependency {
            source_line: 3,
            target_line: 11,
            symbol: "helper",
            dependency_type: FunctionCall,
            context: Some(
                "CallExpression:3:20",
            ),
        },
        Dependency {
            source_line: 17,
            target_line: 20,
            symbol: "MyInterface",
            dependency_type: TypeReference,
            context: Some(
                "TypeIdentifier:17:16",
            ),
        },
        Dependency {
            source_line: 26,
            target_line: 29,
            symbol: "MyClass",
            dependency_type: VariableUse,
            context: Some(
                "Identifier:26:26",
            ),
        },
        Dependency {
            source_line: 34,
            target_line: 38,
            symbol: "MyType",
            dependency_type: TypeReference,
            context: Some(
                "TypeIdentifier:34:21",
            ),
        },
    ],
    usage: [
        Usage {
            name: "helper",
            kind: CallExpression,
            position: Position {
                start_line: 3,
                start_column: 20,
                end_line: 3,
                end_column: 28,
            },
        },
        Usage {
            name: "x",
            kind: Identifier,
            position: Position {
                start_line: 6,
                start_column: 15,
                end_line: 6,
                end_column: 16,
            },
        },
        Usage {
            name: "MyInterface",
            kind: TypeIdentifier,
            position: Position {
                start_line: 17,
                start_column: 16,
                end_line: 17,
                end_column: 27,
            },
        },
        Usage {
            name: "field",
            kind: FieldExpression,
            position: Position {
                start_line: 17,
                start_column: 32,
                end_line: 17,
                end_column: 37,
            },
        },
        Usage {
            name: "field",
            kind: FieldExpression,
            position: Position {
                start_line: 21,
                start_column: 5,
                end_line: 21,
                end_column: 10,
            },
        },
        Usage {
            name: "MyClass",
            kind: Identifier,
            position: Position {
                start_line: 26,
                start_column: 26,
                end_line: 26,
                end_column: 33,
            },
        },
        Usage {
            name: "constructor",
            kind: FieldExpression,
            position: Position {
                start_line: 30,
                start_column: 5,
                end_line: 30,
                end_column: 16,
            },
        },
        Usage {
            name: "MyType",
            kind: TypeIdentifier,
            position: Position {
                start_line: 34,
                start_column: 21,
                end_line: 34,
                end_column: 27,
            },
        },
        Usage {
            name: "MyEnum",
            kind: Identifier,
            position: Position {
                start_line: 42,
                start_column: 19,
                end_line: 42,
                end_column: 25,
            },
        },
        Usage {
            name: "Value1",
            kind: FieldExpression,
            position: Position {
                start_line: 42,
                start_column: 26,
                end_line: 42,
                end_column: 32,
            },
        },
        Usage {
            name: "MyEnum",
            kind: Identifier,
            position: Position {
                start_line: 45,
                start_column: 6,
                end_line: 45,
                end_column: 12,
            },
        },
        Usage {
            name: "Value1",
            kind: FieldExpression,
            position: Position {
                start_line: 46,
                start_column: 5,
                end_line: 46,
                end_column: 11,
            },
        },
        Usage {
            name: "Value2",
            kind: FieldExpression,
            position: Position {
                start_line: 47,
                start_column: 5,
                end_line: 47,
                end_column: 11,
            },
        },
    ],
    analysis_metadata: AnalysisMetadata {
        language: "TypeScript",
        total_lines: 48,
        analysis_timestamp: "now",
        lintric_version: "0.1.0",
    },
}
