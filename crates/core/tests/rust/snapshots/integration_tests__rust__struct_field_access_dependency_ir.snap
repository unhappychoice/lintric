---
source: crates/core/tests/rust/mod.rs
expression: ir_snapshot_content
---
Source Code:
struct Point { x: i32, y: i32 }
fn main() {
    let p = Point { x: 1, y: 2 };
    let val = p.x;
}

AST:
(source_file
  (struct_item
    name: (type_identifier "Point")
    body: (field_declaration_list
      (field_declaration
        name: (field_identifier "x")
        type: (primitive_type "i32")
      )
      (field_declaration
        name: (field_identifier "y")
        type: (primitive_type "i32")
      )
    )
  )
  (function_item
    name: (identifier "main")
    parameters: (parameters)
    body: (block
      (let_declaration
        pattern: (identifier "p")
        value: (struct_expression
          name: (type_identifier "Point")
          body: (field_initializer_list
            (field_initializer
              field: (field_identifier "x")
              value: (integer_literal "1")
            )
            (field_initializer
              field: (field_identifier "y")
              value: (integer_literal "2")
            )
          )
        )
      )
      (let_declaration
        pattern: (identifier "val")
        value: (field_expression
          value: (identifier "p")
          field: (field_identifier "x")
        )
      )
    )
  )
)

IR:
IntermediateRepresentation {
    file_path: "tests/rust/fixtures/struct_field_access_dependency.rs",
    definitions: [
        Definition {
            name: "Point",
            position: Position {
                start_line: 1,
                start_column: 8,
                end_line: 1,
                end_column: 13,
            },
            definition_type: StructDefinition,
        },
        Definition {
            name: "main",
            position: Position {
                start_line: 2,
                start_column: 4,
                end_line: 2,
                end_column: 8,
            },
            definition_type: FunctionDefinition,
        },
        Definition {
            name: "p",
            position: Position {
                start_line: 3,
                start_column: 9,
                end_line: 3,
                end_column: 10,
            },
            definition_type: VariableDefinition,
        },
        Definition {
            name: "val",
            position: Position {
                start_line: 4,
                start_column: 9,
                end_line: 4,
                end_column: 12,
            },
            definition_type: VariableDefinition,
        },
    ],
    dependencies: [
        Dependency {
            source_line: 3,
            target_line: 1,
            symbol: "Point",
            dependency_type: TypeReference,
            context: Some(
                "type_reference",
            ),
        },
        Dependency {
            source_line: 4,
            target_line: 3,
            symbol: "p",
            dependency_type: VariableUse,
            context: Some(
                "variable_use",
            ),
        },
    ],
    usage: [
        Usage {
            name: "Point { x: 1, y: 2 }",
            kind: StructExpression,
            position: Position {
                start_line: 3,
                start_column: 13,
                end_line: 3,
                end_column: 33,
            },
        },
        Usage {
            name: "Point",
            kind: TypeIdentifier,
            position: Position {
                start_line: 3,
                start_column: 13,
                end_line: 3,
                end_column: 18,
            },
        },
        Usage {
            name: "p.x",
            kind: FieldExpression,
            position: Position {
                start_line: 4,
                start_column: 15,
                end_line: 4,
                end_column: 18,
            },
        },
        Usage {
            name: "p",
            kind: Identifier,
            position: Position {
                start_line: 4,
                start_column: 15,
                end_line: 4,
                end_column: 16,
            },
        },
    ],
    analysis_metadata: AnalysisMetadata {
        language: "Rust",
        total_lines: 5,
        analysis_timestamp: "now",
        lintric_version: "0.1.0",
    },
}
