---
source: crates/core/tests/rust/mod.rs
expression: ir_snapshot_content
---
Source Code:
fn main() {
    let add_one = |x| {
        x + 1;
    };
    let y = 2;
    add_one(y);
}


AST:
(source_file
  (function_item
    name: (identifier "main")
    parameters: (parameters)
    body: (block
      (let_declaration
        pattern: (identifier "add_one")
        value: (closure_expression
          parameters: (closure_parameters
            (identifier "x")
          )
          body: (block
            (expression_statement
              (binary_expression
                left: (identifier "x")
                right: (integer_literal "1")
              )
            )
          )
        )
      )
      (let_declaration
        pattern: (identifier "y")
        value: (integer_literal "2")
      )
      (expression_statement
        (call_expression
          function: (identifier "add_one")
          arguments: (arguments
            (identifier "y")
          )
        )
      )
    )
  )
)

IR:
IntermediateRepresentation {
    file_path: "tests/rust/fixtures/closure_dependency.rs",
    definitions: [
        Definition {
            name: "main",
            position: Position {
                start_line: 1,
                start_column: 4,
                end_line: 1,
                end_column: 8,
            },
            definition_type: FunctionDefinition,
        },
        Definition {
            name: "add_one",
            position: Position {
                start_line: 2,
                start_column: 9,
                end_line: 2,
                end_column: 16,
            },
            definition_type: VariableDefinition,
        },
        Definition {
            name: "x",
            position: Position {
                start_line: 2,
                start_column: 20,
                end_line: 2,
                end_column: 21,
            },
            definition_type: VariableDefinition,
        },
        Definition {
            name: "y",
            position: Position {
                start_line: 5,
                start_column: 9,
                end_line: 5,
                end_column: 10,
            },
            definition_type: VariableDefinition,
        },
    ],
    dependencies: [
        Dependency {
            source_line: 3,
            target_line: 2,
            symbol: "x",
            dependency_type: VariableUse,
            context: Some(
                "Identifier:3:9",
            ),
        },
        Dependency {
            source_line: 6,
            target_line: 5,
            symbol: "y",
            dependency_type: VariableUse,
            context: Some(
                "Identifier:6:13",
            ),
        },
    ],
    usage: [
        Usage {
            name: "x",
            kind: Identifier,
            position: Position {
                start_line: 3,
                start_column: 9,
                end_line: 3,
                end_column: 10,
            },
        },
        Usage {
            name: "add_one",
            kind: CallExpression,
            position: Position {
                start_line: 6,
                start_column: 5,
                end_line: 6,
                end_column: 15,
            },
        },
        Usage {
            name: "y",
            kind: Identifier,
            position: Position {
                start_line: 6,
                start_column: 13,
                end_line: 6,
                end_column: 14,
            },
        },
    ],
    analysis_metadata: AnalysisMetadata {
        language: "Rust",
        total_lines: 7,
        analysis_timestamp: "now",
        lintric_version: "0.1.0",
    },
}
