---
source: crates/test-generator/tests/tsx.rs
expression: snapshot_content
---
Source Code:
try { const result1 = riskyOperation(); } catch (error1) { console.log(error1); }

AST:
(program
  (try_statement
    body: (statement_block
      (lexical_declaration
        (variable_declarator
          name: (identifier "result1")
          value: (call_expression
            function: (identifier "riskyOperation")
            arguments: (arguments)
          )
        )
      )
    )
    handler: (catch_clause
      parameter: (identifier "error1")
      body: (statement_block
        (expression_statement
          (call_expression
            function: (member_expression
              object: (identifier "console")
              property: (property_identifier "log")
            )
            arguments: (arguments
              (identifier "error1")
            )
          )
        )
      )
    )
  )
)

IR:
IntermediateRepresentation {
    file_path: "<memory>",
    definitions: [
        Definition {
            name: "result1",
            position: Position {
                start_line: 1,
                start_column: 13,
                end_line: 1,
                end_column: 20,
            },
            definition_type: VariableDefinition,
        },
    ],
    dependencies: [],
    usage: [
        Usage {
            name: "riskyOperation",
            kind: CallExpression,
            position: Position {
                start_line: 1,
                start_column: 23,
                end_line: 1,
                end_column: 39,
            },
            context: Some(
                "call_expression",
            ),
        },
        Usage {
            name: "error1",
            kind: Identifier,
            position: Position {
                start_line: 1,
                start_column: 50,
                end_line: 1,
                end_column: 56,
            },
            context: None,
        },
        Usage {
            name: "console.log",
            kind: CallExpression,
            position: Position {
                start_line: 1,
                start_column: 60,
                end_line: 1,
                end_column: 79,
            },
            context: Some(
                "call_expression",
            ),
        },
        Usage {
            name: "console",
            kind: Identifier,
            position: Position {
                start_line: 1,
                start_column: 60,
                end_line: 1,
                end_column: 67,
            },
            context: Some(
                "call_expression",
            ),
        },
        Usage {
            name: "log",
            kind: FieldExpression,
            position: Position {
                start_line: 1,
                start_column: 68,
                end_line: 1,
                end_column: 71,
            },
            context: Some(
                "call_expression",
            ),
        },
        Usage {
            name: "error1",
            kind: Identifier,
            position: Position {
                start_line: 1,
                start_column: 72,
                end_line: 1,
                end_column: 78,
            },
            context: Some(
                "call_expression",
            ),
        },
    ],
    analysis_metadata: AnalysisMetadata {
        language: "TSX",
        total_lines: 1,
        analysis_timestamp: "now",
        lintric_version: "0.1.0",
    },
}
