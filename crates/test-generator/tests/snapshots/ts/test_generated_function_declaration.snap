---
source: crates/test-generator/tests/typescript.rs
expression: snapshot_content
---
Source Code:
function testFn1(param: number): number { const local = param; return local + 1; }

AST:
(program
  (function_declaration
    name: (identifier "testFn1")
    parameters: (formal_parameters
      (required_parameter
        pattern: (identifier "param")
        type: (type_annotation
          (predefined_type "number")
        )
      )
    )
    return_type: (type_annotation
      (predefined_type "number")
    )
    body: (statement_block
      (lexical_declaration
        (variable_declarator
          name: (identifier "local")
          value: (identifier "param")
        )
      )
      (return_statement
        (binary_expression
          left: (identifier "local")
          right: (number "1")
        )
      )
    )
  )
)

IR:
IntermediateRepresentation {
    file_path: "<memory>",
    definitions: [
        Definition { position: { 1:10 to 1:17 }, name: "testFn1", definition_type: FunctionDefinition, scope_id: Some(1), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 1:18 to 1:23 }, name: "param", definition_type: VariableDefinition, scope_id: Some(1), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 1:49 to 1:54 }, name: "local", definition_type: VariableDefinition, scope_id: Some(1), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
    ],
    dependencies: [],
    usage: [
        Usage { position: { 1:57 to 1:62 }, name: "param", kind: Identifier, context: None },
        Usage { position: { 1:71 to 1:76 }, name: "local", kind: Identifier, context: None },
    ],
    analysis_metadata: AnalysisMetadata {
        language: "TypeScript",
        total_lines: 1,
        analysis_timestamp: "now",
        lintric_version: "0.1.0",
    },
}
