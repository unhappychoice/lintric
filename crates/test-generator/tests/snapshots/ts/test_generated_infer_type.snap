---
source: crates/test-generator/tests/typescript.rs
expression: snapshot_content
---
Source Code:
type Test<T2> = T2 extends infer U ? U : never; const value11: Test<string> = 'test';

AST:
(program
  (type_alias_declaration
    name: (type_identifier "Test")
    type_parameters: (type_parameters
      (type_parameter
        name: (type_identifier "T2")
      )
    )
    value: (conditional_type
      left: (type_identifier "T2")
      right: (infer_type
        (type_identifier "U")
      )
      consequence: (type_identifier "U")
      alternative: (predefined_type "never")
    )
  )
  (lexical_declaration
    (variable_declarator
      name: (identifier "value11")
      type: (type_annotation
        (generic_type
          name: (type_identifier "Test")
          type_arguments: (type_arguments
            (predefined_type "string")
          )
        )
      )
      value: (string
        (string_fragment)
      )
    )
  )
)

IR:
IntermediateRepresentation {
    file_path: "<memory>",
    definitions: [
        Definition { position: { 1:6 to 1:10 }, name: "Test", definition_type: TypeDefinition, scope_id: Some(0), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 1:11 to 1:13 }, name: "T2", definition_type: TypeDefinition, scope_id: Some(0), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 1:55 to 1:62 }, name: "value11", definition_type: VariableDefinition, scope_id: Some(0), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
    ],
    dependencies: [],
    usage: [
        Usage { position: { 1:17 to 1:19 }, name: "T2", kind: TypeIdentifier, context: None },
        Usage { position: { 1:34 to 1:35 }, name: "U", kind: TypeIdentifier, context: None },
        Usage { position: { 1:38 to 1:39 }, name: "U", kind: TypeIdentifier, context: None },
        Usage { position: { 1:64 to 1:68 }, name: "Test", kind: TypeIdentifier, context: None },
    ],
    analysis_metadata: AnalysisMetadata {
        language: "TypeScript",
        total_lines: 1,
        analysis_timestamp: "now",
        lintric_version: "0.1.0",
    },
}
