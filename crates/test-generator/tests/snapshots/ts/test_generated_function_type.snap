---
source: crates/test-generator/tests/typescript.rs
expression: snapshot_content
---
Source Code:
const fn: (x: number) => string = (x) => x.toString();

AST:
(program
  (lexical_declaration
    (variable_declarator
      name: (identifier "fn")
      type: (type_annotation
        (function_type
          parameters: (formal_parameters
            (required_parameter
              pattern: (identifier "x")
              type: (type_annotation
                (predefined_type "number")
              )
            )
          )
          return_type: (predefined_type "string")
        )
      )
      value: (arrow_function
        parameters: (formal_parameters
          (required_parameter
            pattern: (identifier "x")
          )
        )
        body: (call_expression
          function: (member_expression
            object: (identifier "x")
            property: (property_identifier "toString")
          )
          arguments: (arguments)
        )
      )
    )
  )
)

IR:
IntermediateRepresentation {
    file_path: "<memory>",
    definitions: [
        Definition { position: { 1:7 to 1:9 }, name: "fn", definition_type: VariableDefinition, scope_id: Some(0), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
        Definition { position: { 1:36 to 1:37 }, name: "x", definition_type: VariableDefinition, scope_id: Some(1), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
    ],
    dependencies: [],
    usage: [
        Usage { position: { 1:42 to 1:54 }, name: "x.toString", kind: CallExpression, context: Some("call_expression") },
        Usage { position: { 1:42 to 1:43 }, name: "x", kind: Identifier, context: Some("call_expression") },
        Usage { position: { 1:44 to 1:52 }, name: "toString", kind: FieldExpression, context: Some("call_expression") },
    ],
    analysis_metadata: AnalysisMetadata {
        language: "TypeScript",
        total_lines: 1,
        analysis_timestamp: "now",
        lintric_version: "0.1.0",
    },
}
