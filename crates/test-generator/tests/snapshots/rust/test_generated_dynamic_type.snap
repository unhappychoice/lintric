---
source: crates/test-generator/tests/rust.rs
expression: snapshot_content
---
Source Code:
let var3: Box<dyn std::fmt::Display> = Box::new(42);

AST:
(source_file
  (let_declaration
    pattern: (identifier "var3")
    type: (generic_type
      type: (type_identifier "Box")
      type_arguments: (type_arguments
        (dynamic_type
          trait: (scoped_type_identifier "std::fmt::Display"
            path: (scoped_identifier "std::fmt"
              path: (identifier "std")
              name: (identifier "fmt")
            )
            name: (type_identifier "Display")
          )
        )
      )
    )
    value: (call_expression
      function: (scoped_identifier "Box::new"
        path: (identifier "Box")
        name: (identifier "new")
      )
      arguments: (arguments
        (integer_literal "42")
      )
    )
  )
)

IR:
IntermediateRepresentation {
    file_path: "<memory>",
    definitions: [
        Definition { position: { 1:5 to 1:9 }, name: "var3", definition_type: VariableDefinition, scope_id: Some(0), accessibility: Some(ScopeLocal), is_hoisted: Some(false) },
    ],
    dependencies: [],
    usage: [
        Usage { position: { 1:11 to 1:14 }, name: "Box", kind: TypeIdentifier, context: None },
        Usage { position: { 1:19 to 1:22 }, name: "std", kind: Identifier, context: Some("scoped_identifier") },
        Usage { position: { 1:24 to 1:27 }, name: "fmt", kind: Identifier, context: Some("scoped_identifier") },
        Usage { position: { 1:29 to 1:36 }, name: "Display", kind: TypeIdentifier, context: None },
        Usage { position: { 1:40 to 1:52 }, name: "Box::new", kind: CallExpression, context: Some("call_expression") },
        Usage { position: { 1:40 to 1:43 }, name: "Box", kind: Identifier, context: Some("scoped_identifier") },
        Usage { position: { 1:45 to 1:48 }, name: "new", kind: Identifier, context: Some("scoped_identifier") },
    ],
    analysis_metadata: AnalysisMetadata {
        language: "Rust",
        total_lines: 1,
        analysis_timestamp: "now",
        lintric_version: "0.1.0",
    },
}
